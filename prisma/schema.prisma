// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider            = "prisma-dbml-generator"
  output              = "../documentation/dbml"
  outputName          = "/bitmosys-q423.dbml"
  projectName         = "bitmosys-q423-api"
  projectDatabaseType = "MongoDB"
  projectNote         = "This is a sample project note"
}

// Define the User data model
model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  balance      Float         @default(100000)
  wallets      Wallet[]
  transactions Transaction[]
}

// Define the Coin data model
model Coin {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  coinSymbol   String        @unique
  iconUrl      String
  brandColor   String
  exchangeRate Float
  wallets      Wallet[]
  transactions Transaction[]
}

// Define the Wallet data model
model Wallet {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  balance      Float
  userId       String        @db.ObjectId
  coinId       String        @db.ObjectId
  user         User          @relation(fields: [userId], references: [id])
  coin         Coin          @relation(fields: [coinId], references: [id])
  transactions Transaction[]
}

// Define the Transaction data model
model Transaction {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  amount           Float
  transactionValue Float
  transactionType  String
  timestamp        DateTime @default(now())
  userId           String   @db.ObjectId
  walletId         String   @db.ObjectId
  coinId           String   @db.ObjectId
  coin             Coin     @relation(fields: [coinId], references: [id])
  user             User     @relation(fields: [userId], references: [id])
  wallet           Wallet   @relation(fields: [walletId], references: [id])
}
