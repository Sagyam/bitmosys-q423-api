var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.344,1,2.3]],["body/controllers/AppController.html",[0,2.155,1,3.689,2,1.715,3,0.249,4,0.249,5,0.213,6,3.698,7,0.581,8,1.777,9,5.335,10,1.715,11,0.024,12,0.679,13,4.363,14,1.413,15,1.133,16,0.36,17,0.842,18,3.377,19,3.698,20,0.249,21,0.199,22,2.27,23,1.715,24,1.413,25,4.363,26,0.019,27,0.019]],["title/modules/AppModule.html",[28,1.18,29,2.3]],["body/modules/AppModule.html",[1,3.214,2,1.596,3,0.16,4,0.16,5,0.137,11,0.025,16,0.416,17,0.541,18,3.266,19,2.375,20,0.16,21,0.128,26,0.014,27,0.014,28,1.65,29,4.505,30,1.261,31,1.261,32,1.458,33,1.458,34,1.261,35,2.487,36,1.458,37,2.375,38,2.375,39,2.375,40,3.555,41,2.61,42,3.555,43,3.555,44,3.555,45,2.114,46,1.458,47,1.458,48,2.802,49,2.489,50,4.062,51,2.375,52,4.062,53,2.802,54,2.375,55,1.717,56,2.802,57,2.802,58,2.802,59,2.802,60,2.802,61,2.802,62,1.364,63,2.802,64,4.778,65,2.802,66,4.778,67,2.375,68,2.802,69,2.802,70,2.802,71,2.802,72,2.802,73,2.802,74,2.802,75,2.802]],["title/injectables/AppService.html",[18,1.925,76,0.706]],["body/injectables/AppService.html",[3,0.262,4,0.262,5,0.224,7,0.611,8,1.833,9,5.431,11,0.024,12,0.714,14,1.486,15,1.169,16,0.301,17,0.885,18,3.186,20,0.262,21,0.209,24,1.486,26,0.02,27,0.02,76,1.169,77,1.803,78,3.889,79,4.588,80,4.588,81,4.588]],["title/injectables/CloudinaryConfigService.html",[76,0.706,82,1.925]],["body/injectables/CloudinaryConfigService.html",[3,0.242,4,0.242,5,0.207,7,0.564,11,0.024,12,0.921,15,1.222,16,0.278,17,0.817,20,0.242,21,0.193,24,1.916,26,0.019,27,0.019,76,1.111,77,1.663,82,3.028,83,3.587,84,5.379,85,5.914,86,5.914,87,5.914,88,4.231,89,4.231,90,4.231,91,4.231,92,4.231,93,4.231,94,4.231,95,4.231,96,4.231]],["title/injectables/CloudinaryService.html",[76,0.706,97,1.925]],["body/injectables/CloudinaryService.html",[3,0.208,4,0.208,5,0.238,7,0.486,8,1.582,11,0.024,12,0.76,14,1.181,16,0.361,17,0.704,20,0.208,21,0.166,22,1.898,23,1.433,24,1.181,26,0.017,27,0.017,62,1.394,76,1.008,77,1.433,82,3.309,97,2.749,98,3.092,99,2.312,100,4.882,101,2.054,102,3.647,103,3.647,104,1.919,105,0.942,106,1.798,107,4.882,108,4.882,109,4.666,110,3.647,111,2.051,112,3.65,113,3.092,114,3.647,115,3.647,116,3.647,117,3.647,118,3.647,119,3.647,120,3.647,121,1.898,122,3.647,123,2.235,124,3.647,125,3.647,126,1.433,127,3.647]],["title/classes/Coin.html",[21,0.156,126,1.344]],["body/classes/Coin.html",[3,0.227,4,0.227,5,0.194,7,0.529,11,0.024,12,1.006,15,1.404,20,0.227,21,0.181,26,0.018,27,0.018,62,1.639,105,1.247,126,2.03,128,1.208,129,3.368,130,1.902,131,4.291,132,3.518,133,4.291,134,4.867,135,1.86,136,3.973,137,3.973,138,2.03,139,3.973,140,3.973,141,3.973,142,3.973]],["title/controllers/CoinController.html",[0,1.344,143,2.3]],["body/controllers/CoinController.html",[0,0.933,2,0.933,3,0.136,4,0.136,5,0.116,7,0.316,8,1.164,10,2.04,11,0.025,12,0.808,14,1.682,15,1.235,16,0.383,17,0.458,20,0.136,21,0.108,22,1.235,23,0.933,24,1.682,26,0.013,27,0.013,62,1.482,99,2.295,104,2.04,105,1.002,106,1.911,111,2.561,123,1.455,126,1.412,135,1.769,143,2.416,144,2.012,145,1.596,146,1.323,147,2.656,148,1.735,149,2.023,150,2.44,151,2.012,152,2.842,153,2.374,154,2.915,155,2.374,156,1.455,157,1.779,158,2.374,159,1.616,160,1.147,161,2.416,162,2.374,163,1.336,164,2.685,165,2.374,166,1.336,167,3.58,168,2.685,169,2.374,170,2.416,171,1.774,172,1.596,173,1.774,174,2.416,175,2.201,176,2.374,177,1.596,178,1.774,179,2.374,180,1.412,181,1.068,182,0.874,183,1.068,184,2.44,185,2.012,186,1.068,187,2.416,188,1.336,189,2.374,190,2.374,191,1.596,192,2.374,193,2.374,194,1.596,195,2.374,196,2.374,197,2.374,198,1.774,199,2.374]],["title/modules/CoinModule.html",[28,1.18,40,2.095]],["body/modules/CoinModule.html",[2,2.009,3,0.223,4,0.223,5,0.191,11,0.024,16,0.396,17,0.755,20,0.223,21,0.178,26,0.018,27,0.018,28,1.966,30,1.759,31,1.759,32,2.034,33,2.034,34,1.759,35,2.964,36,2.034,40,4.072,41,2.893,45,2.66,46,2.034,47,2.034,49,3.133,55,2.396,143,3.831,184,3.621,185,3.314,200,3.314,201,3.909,202,3.314,203,3.909,204,3.909]],["title/injectables/CoinService.html",[76,0.706,184,1.925]],["body/injectables/CoinService.html",[3,0.116,4,0.116,5,0.099,7,0.27,8,1.029,11,0.025,12,0.798,14,1.564,15,1.178,16,0.374,17,0.391,20,0.116,21,0.092,23,0.796,24,1.564,26,0.011,27,0.011,62,1.666,76,0.656,77,0.796,97,3.016,99,2.152,101,1.789,104,2.014,105,0.989,106,1.886,111,2.453,112,1.514,121,2.312,123,1.948,126,1.249,131,3.321,132,2.723,133,3.321,134,2.694,135,1.66,146,1.636,148,1.535,149,1.789,150,1.789,151,2.694,152,2.666,157,1.636,159,1.765,160,1.535,163,1.789,166,1.789,167,3.4,177,1.362,180,1.249,181,0.911,182,0.745,183,0.911,184,1.789,186,0.911,187,2.138,188,1.14,205,1.717,206,2.639,207,1.362,208,2.305,209,2.502,210,1.867,211,2.025,212,2.025,213,1.514,214,2.025,215,2.025,216,2.025,217,2.025,218,1.717,219,1.241,220,1.14,221,2.639,222,1.717,223,2.025,224,1.717,225,2.025,226,2.025,227,2.025,228,2.025,229,3.178,230,2.025,231,1.948,232,1.717,233,1.514,234,1.362,235,1.717,236,2.025,237,2.025]],["title/modules/CommonModule.html",[28,1.18,41,1.539]],["body/modules/CommonModule.html",[3,0.191,4,0.191,5,0.163,11,0.024,16,0.39,17,0.644,20,0.191,21,0.152,26,0.016,27,0.016,28,1.815,30,1.501,31,1.501,32,1.736,33,1.736,34,1.501,35,2.736,36,2.736,41,3.073,45,2.392,46,1.736,47,1.736,82,3.458,97,3.775,113,2.829,208,3.017,210,2.817,218,2.829,219,2.045,220,1.879,238,2.829,239,2.829,240,2.829,241,3.336]],["title/classes/CreateCoinDto.html",[21,0.156,152,1.779]],["body/classes/CreateCoinDto.html",[3,0.161,4,0.161,5,0.234,7,0.375,10,2.191,11,0.024,12,0.868,15,1.268,16,0.185,20,0.161,21,0.186,26,0.014,27,0.014,62,1.711,105,1.076,109,3.458,128,0.857,130,1.502,131,3.583,132,2.938,133,3.583,138,2.065,152,2.123,222,4.727,242,4.928,243,2.106,244,2.818,245,4.079,246,5.254,247,3.049,248,4.079,249,2.818,250,2.743,251,5.254,252,4.079,253,4.455,254,3.834,255,5.254,256,5.254,257,5.254,258,2.818,259,1.895,260,4.079,261,4.079,262,2.743,263,2.818,264,2.818,265,2.818,266,5.254,267,2.818,268,4.079,269,4.079,270,2.743,271,3.224,272,2.818,273,1.466,274,4.079]],["title/classes/CreateTransactionDto.html",[21,0.156,275,1.925]],["body/classes/CreateTransactionDto.html",[3,0.171,4,0.171,5,0.146,7,0.399,10,2.245,11,0.024,12,0.89,15,1.33,16,0.197,20,0.171,21,0.194,26,0.015,27,0.015,105,1.226,126,1.676,128,0.912,130,1.57,132,3.042,135,2.022,138,2.125,247,4.042,250,2.017,254,3.638,259,2.017,262,2.869,270,2.869,271,2.869,273,1.561,275,2.402,276,5.033,277,2.242,278,4.27,279,3.711,280,3.042,281,4.208,282,2.999,283,2.999,284,4.265,285,5.407,286,2.061,287,3.616,288,2.999,289,3.616,290,1.676,291,4.584,292,2.999,293,1.919,294,2.999,295,2.999,296,4.208]],["title/classes/CreateUserDto.html",[21,0.156,297,1.925]],["body/classes/CreateUserDto.html",[3,0.231,4,0.231,5,0.197,7,0.538,10,2.052,11,0.024,12,0.813,15,1.263,16,0.265,20,0.231,21,0.238,26,0.018,27,0.018,62,1.808,105,1.008,128,1.228,130,1.922,138,2.404,250,2.716,254,3.2,259,2.716,262,3.512,270,3.512,271,3.512,273,2.102,297,2.94,298,4.905,299,3.019,300,3.566,301,4.039,302,4.039]],["title/classes/CreateWalletDto.html",[21,0.156,303,1.925]],["body/classes/CreateWalletDto.html",[3,0.204,4,0.204,5,0.174,7,0.475,10,2.139,11,0.024,12,0.847,15,1.203,16,0.234,20,0.204,21,0.219,26,0.017,27,0.017,105,1.05,126,1.891,128,1.085,130,1.771,135,2.11,138,2.289,247,4.354,254,3.335,259,2.4,262,3.236,270,3.236,273,1.856,280,3.335,289,4.078,290,1.891,291,4.938,296,4.614,300,3.424,303,2.708,304,4.938,305,2.667,306,4.068,307,3.567,308,3.567,309,3.567]],["title/injectables/ImageValidationPipe.html",[76,0.706,154,2.3]],["body/injectables/ImageValidationPipe.html",[3,0.187,4,0.187,5,0.316,7,0.436,8,1.468,11,0.025,12,0.509,14,1.059,16,0.297,17,0.631,20,0.187,21,0.149,24,1.468,26,0.016,27,0.016,62,0.933,76,0.936,77,1.285,99,2.185,104,1.285,105,0.631,106,1.204,121,2.358,152,2.923,154,3.048,178,3.388,186,1.471,187,2.199,224,2.772,310,2.772,311,4.532,312,4.532,313,3.27,314,3.27,315,2.772,316,5.201,317,4.532,318,2.772,319,3.27,320,4.41,321,3.499,322,3.27,323,3.27,324,4.532,325,3.27,326,3.27,327,3.27,328,3.27,329,4.532,330,4.41,331,3.27,332,5.201,333,4.532,334,2.444,335,4.532,336,3.27,337,3.27,338,3.27,339,3.27,340,3.27]],["title/classes/PaginatedRequestDTO.html",[21,0.156,157,1.259]],["body/classes/PaginatedRequestDTO.html",[3,0.138,4,0.138,5,0.118,7,0.322,10,2.242,11,0.024,12,0.888,15,1.317,16,0.158,20,0.138,21,0.166,26,0.013,27,0.013,105,1.101,106,2.37,128,0.734,130,1.34,138,1.916,157,1.34,175,2.23,180,2.308,250,3.518,254,3.811,271,3.698,273,1.256,330,4.133,334,2.72,341,2.047,342,4.379,343,4.379,344,4.379,345,5.273,346,3.713,347,4.379,348,4.379,349,5.497,350,3.639,351,5.23,352,2.415,353,3.639,354,2.415,355,2.415,356,3.639,357,3.639,358,4.875,359,4.875,360,3.639,361,2.415,362,2.415,363,4.875,364,2.415,365,3.639,366,3.639,367,3.639,368,2.415,369,3.713,370,5.872,371,2.047,372,3.639,373,3.085]],["title/classes/PaginatedResponseDTO.html",[21,0.156,182,1.259]],["body/classes/PaginatedResponseDTO.html",[3,0.215,4,0.215,5,0.184,7,0.501,10,2.338,11,0.024,12,0.926,16,0.247,20,0.215,21,0.227,26,0.017,27,0.017,105,1.148,128,1.143,130,1.834,138,2.338,180,2.433,182,1.834,231,3.424,273,1.956,345,4.737,346,4.737,369,4.737,371,3.187,373,4.223,374,3.187,375,5.588,376,4.982,377,5.588,378,3.759,379,4.982,380,5.588,381,3.759,382,4.982,383,3.759,384,3.759]],["title/injectables/PaginationService.html",[76,0.706,208,1.539]],["body/injectables/PaginationService.html",[3,0.156,4,0.156,5,0.134,7,0.365,8,1.294,11,0.025,12,0.622,14,0.887,15,0.974,16,0.34,17,0.529,20,0.156,21,0.125,22,1.425,23,1.076,24,0.887,26,0.014,27,0.014,62,1.14,76,0.825,77,1.076,99,1.982,101,1.542,104,1.57,105,0.771,106,1.471,111,1.679,121,2.869,123,2.448,157,1.909,159,2.122,181,1.232,182,1.471,183,1.232,206,3.173,208,1.798,209,2.25,210,2.178,220,1.542,231,2.448,321,1.842,334,2.987,385,2.322,386,2.739,387,2.739,388,2.739,389,2.739,390,3.995,391,3.995,392,5.185,393,2.322,394,5.513,395,2.322,396,3.995,397,4.717,398,5.185,399,3.995,400,2.739,401,3.995,402,2.739,403,2.739,404,3.995,405,2.739,406,2.739,407,3.995,408,2.739,409,3.995,410,2.739,411,2.739,412,2.739,413,2.739]],["title/injectables/PrismaService.html",[76,0.706,210,1.437]],["body/injectables/PrismaService.html",[3,0.248,4,0.248,5,0.212,7,0.579,8,1.772,11,0.024,12,0.676,14,1.407,16,0.359,17,0.838,20,0.248,21,0.198,26,0.019,27,0.019,76,1.13,77,1.707,99,2.515,123,2.662,210,2.298,318,3.682,414,3.682,415,3.352,416,5.986,417,6.611,418,4.343,419,3.682,420,4.343]],["title/classes/Transaction.html",[21,0.156,286,1.652]],["body/classes/Transaction.html",[3,0.191,4,0.191,5,0.164,7,0.446,11,0.024,12,1.026,15,1.361,16,0.302,20,0.191,21,0.152,26,0.016,27,0.016,105,1.272,128,1.018,130,1.696,132,3.228,135,1.706,138,2.23,278,3.937,279,3.937,280,3.228,281,4.465,286,2.225,290,2.416,293,2.766,421,2.838,422,5.267,423,4.465,424,3.348,425,3.348,426,3.348,427,4.607,428,3.348,429,3.348,430,3.348,431,3.348,432,3.348,433,3.348,434,3.348,435,2.052,436,2.052]],["title/controllers/TransactionController.html",[0,1.344,437,2.3]],["body/controllers/TransactionController.html",[0,1.193,2,1.193,3,0.173,4,0.173,5,0.148,7,0.404,8,1.394,10,1.964,11,0.025,12,0.778,14,1.619,15,1.032,16,0.391,17,0.586,20,0.173,21,0.138,22,1.58,23,1.193,24,1.619,26,0.015,27,0.015,62,1.427,99,2.1,104,1.964,105,0.965,106,1.84,111,2.284,135,1.394,145,2.042,146,1.584,147,3.063,148,2.079,156,1.861,157,2.002,159,1.936,160,1.467,161,2.894,170,2.042,172,2.042,174,3.362,175,2.637,180,1.691,181,1.366,182,1.118,183,1.366,186,1.366,191,2.042,194,2.042,275,3.356,286,2.079,437,2.894,438,2.574,439,2.574,440,3.036,441,3.036,442,3.036,443,2.042,444,2.27,445,2.814,446,2.574,447,3.036,448,3.036,449,3.036,450,3.036]],["title/modules/TransactionModule.html",[28,1.18,42,2.095]],["body/modules/TransactionModule.html",[2,2.009,3,0.223,4,0.223,5,0.191,11,0.024,16,0.396,17,0.755,20,0.223,21,0.178,26,0.018,27,0.018,28,1.966,30,1.759,31,1.759,32,2.034,33,2.034,34,1.759,35,2.964,36,2.034,41,2.893,42,4.072,45,2.66,46,2.034,47,2.034,49,3.133,55,2.396,437,3.831,445,3.621,446,3.314,451,3.314,452,3.909,453,3.314,454,3.909,455,3.909]],["title/injectables/TransactionService.html",[76,0.706,445,1.925]],["body/injectables/TransactionService.html",[3,0.137,4,0.137,5,0.117,7,0.318,8,1.17,11,0.025,12,0.811,14,1.571,15,1.131,16,0.401,17,0.461,20,0.137,21,0.109,23,0.94,24,1.17,26,0.013,27,0.013,62,1.487,76,0.746,77,0.94,99,2.389,101,2.034,104,2.047,105,1.005,106,1.917,111,1.004,121,1.244,126,2.301,135,1.17,138,1.711,146,1.33,148,1.745,157,1.603,159,1.625,160,1.745,177,1.608,180,1.42,181,1.076,182,0.88,183,1.076,186,1.076,206,2.43,207,1.608,208,2.464,209,2.451,210,2.038,213,1.787,219,1.465,220,1.346,221,2.43,234,1.608,275,2.731,278,3.626,279,3.626,286,1.155,287,2.027,290,2.235,293,2.634,315,3.062,423,2.027,435,1.465,436,1.465,439,2.027,443,1.608,444,1.787,445,2.034,456,2.027,457,4.353,458,2.391,459,2.391,460,2.391,461,2.391,462,2.391,463,2.391,464,2.027,465,2.027,466,2.391,467,2.391,468,2.391,469,2.391,470,3.612]],["title/classes/UpdateCoinDto.html",[21,0.156,167,2.095]],["body/classes/UpdateCoinDto.html",[3,0.272,4,0.272,5,0.233,11,0.024,16,0.38,20,0.272,21,0.217,26,0.02,27,0.02,128,1.449,146,1.755,152,2.48,167,3.55,187,3.206,243,3.563,415,3.55,471,4.041,472,5.793,473,3.206,474,4.041,475,4.041]],["title/classes/UpdateTransactionDto.html",[21,0.156,476,2.556]],["body/classes/UpdateTransactionDto.html",[3,0.274,4,0.274,5,0.234,11,0.024,16,0.381,20,0.274,21,0.218,26,0.02,27,0.02,128,1.456,146,1.763,275,2.697,277,3.58,415,3.56,444,3.58,473,3.222,476,4.343,477,4.06,478,5.81,479,3.222]],["title/classes/UpdateUserDto.html",[21,0.156,480,2.095]],["body/classes/UpdateUserDto.html",[3,0.274,4,0.274,5,0.234,11,0.024,16,0.381,20,0.274,21,0.218,26,0.02,27,0.02,128,1.456,146,1.763,297,2.697,299,3.58,415,3.56,473,3.222,479,3.222,480,3.56,481,4.06,482,5.81,483,3.58]],["title/classes/UpdateWalletDto.html",[21,0.156,484,2.095]],["body/classes/UpdateWalletDto.html",[3,0.274,4,0.274,5,0.234,11,0.024,16,0.381,20,0.274,21,0.218,26,0.02,27,0.02,128,1.456,146,1.763,303,2.697,305,3.58,415,3.56,473,3.222,479,3.222,484,3.56,485,4.06,486,5.81,487,3.58]],["title/classes/User.html",[21,0.156,290,1.344]],["body/classes/User.html",[3,0.226,4,0.226,5,0.193,7,0.527,11,0.024,12,0.98,15,1.254,16,0.338,20,0.226,21,0.18,26,0.018,27,0.018,62,1.635,105,1.215,128,1.203,130,1.897,135,1.856,138,2.025,232,4.857,233,4.283,286,2.768,290,2.025,293,2.578,300,3.226,436,2.425,443,2.661,488,3.355,489,3.957,490,3.957,491,3.957,492,3.957,493,3.957]],["title/controllers/UserController.html",[0,1.344,494,2.3]],["body/controllers/UserController.html",[0,0.998,2,0.998,3,0.145,4,0.145,5,0.124,7,0.338,8,1.224,10,2.1,11,0.025,12,0.832,14,1.731,15,1.258,16,0.381,17,0.49,20,0.145,21,0.116,22,1.322,23,0.998,24,1.731,26,0.013,27,0.013,62,1.525,104,2.1,105,1.032,106,1.968,111,1.588,135,1.815,145,1.708,146,1.391,147,2.766,148,1.826,149,2.128,150,2.128,156,1.556,157,1.841,159,1.701,160,1.227,161,2.542,163,1.43,164,2.825,166,1.43,168,2.825,170,2.542,171,1.899,172,1.708,173,1.899,174,3.036,175,2.316,180,1.485,181,1.143,182,0.935,183,1.143,186,1.143,188,1.43,191,1.708,194,1.708,198,1.899,290,1.485,297,3.154,435,1.556,480,3.653,483,2.825,494,2.542,495,2.153,496,2.153,497,2.54,498,2.54,499,2.54,500,2.54,501,2.54,502,2.541,503,2.153,504,2.54,505,2.54,506,2.54,507,2.54,508,2.153,509,2.54,510,2.54]],["title/modules/UserModule.html",[28,1.18,43,2.095]],["body/modules/UserModule.html",[2,2.009,3,0.223,4,0.223,5,0.191,11,0.024,16,0.396,17,0.755,20,0.223,21,0.178,26,0.018,27,0.018,28,1.966,30,1.759,31,1.759,32,2.034,33,2.034,34,1.759,35,2.964,36,2.034,41,2.893,43,4.072,45,2.66,46,2.034,47,2.034,49,3.133,55,2.396,494,3.831,502,3.621,503,3.314,511,3.314,512,3.314,513,3.909,514,3.909,515,3.909]],["title/injectables/UserService.html",[76,0.706,502,1.925]],["body/injectables/UserService.html",[3,0.131,4,0.131,5,0.112,7,0.307,8,1.137,11,0.025,12,0.84,14,1.659,15,1.224,16,0.38,17,0.444,20,0.131,21,0.105,23,0.904,24,1.659,26,0.012,27,0.012,62,1.726,76,0.725,77,0.904,99,1.786,101,1.975,104,2.121,105,1.042,106,1.987,111,1.474,121,2.213,135,1.748,146,1.292,147,2.606,148,1.695,149,1.975,150,1.975,156,1.41,157,1.751,159,1.913,160,1.695,163,1.975,166,1.975,180,1.379,181,1.035,182,0.847,183,1.035,186,1.035,188,1.296,207,1.548,208,2.428,209,2.394,210,1.998,219,1.41,220,1.296,221,2.36,231,2.15,234,1.548,290,1.869,297,3.038,300,2.678,435,1.41,480,3.545,483,2.623,496,2.974,502,1.975,516,1.951,517,2.301,518,2.301,519,2.301,520,2.301,521,2.301,522,2.301,523,2.301,524,1.951,525,2.301,526,2.301]],["title/classes/Wallet.html",[21,0.156,293,1.539]],["body/classes/Wallet.html",[3,0.207,4,0.207,5,0.177,7,0.482,11,0.024,12,1.001,15,1.3,16,0.36,20,0.207,21,0.165,26,0.017,27,0.017,105,1.241,126,2.473,128,1.101,130,1.789,135,1.776,138,1.909,177,2.435,233,4.099,280,3.36,286,2.649,290,2.473,293,2.186,300,3.087,306,4.099,435,2.219,443,2.435,527,3.069,528,3.62,529,3.62,530,3.62,531,3.62,532,3.62,533,3.62,534,3.62]],["title/controllers/WalletController.html",[0,1.344,535,2.3]],["body/controllers/WalletController.html",[0,0.998,2,0.998,3,0.145,4,0.145,5,0.124,7,0.338,8,1.224,10,2.1,11,0.025,12,0.832,14,1.731,15,1.258,16,0.381,17,0.49,20,0.145,21,0.116,22,1.322,23,0.998,24,1.731,26,0.013,27,0.013,62,1.525,104,2.1,105,1.032,106,1.968,111,1.588,135,1.815,145,1.708,146,1.391,147,2.766,148,1.826,149,2.128,150,2.128,156,1.556,157,1.841,159,1.701,160,1.227,161,2.542,163,1.43,164,2.825,166,1.43,168,2.825,170,2.542,171,1.899,172,1.708,173,1.899,174,3.036,175,2.316,180,1.485,181,1.143,182,0.935,183,1.143,186,1.143,188,1.43,191,1.708,194,1.708,198,1.899,293,1.701,303,3.154,436,1.556,484,3.653,487,2.825,508,2.153,535,2.542,536,2.153,537,2.153,538,2.54,539,2.54,540,2.54,541,2.54,542,2.54,543,2.541,544,2.153,545,2.54,546,2.54,547,2.54,548,2.54,549,2.54,550,2.54]],["title/modules/WalletModule.html",[28,1.18,44,2.095]],["body/modules/WalletModule.html",[2,2.009,3,0.223,4,0.223,5,0.191,11,0.024,16,0.396,17,0.755,20,0.223,21,0.178,26,0.018,27,0.018,28,1.966,30,1.759,31,1.759,32,2.034,33,2.034,34,1.759,35,2.964,36,2.034,41,2.893,44,4.072,45,2.66,46,2.034,47,2.034,49,3.133,55,2.396,535,3.831,543,3.621,544,3.314,551,3.314,552,3.314,553,3.909,554,3.909,555,3.909]],["title/injectables/WalletService.html",[76,0.706,543,1.925]],["body/injectables/WalletService.html",[3,0.119,4,0.119,5,0.101,7,0.277,8,1.05,11,0.025,12,0.806,14,1.583,15,1.188,16,0.367,17,0.401,20,0.119,21,0.095,23,0.816,24,1.583,26,0.011,27,0.011,62,1.478,76,0.669,77,0.816,99,1.675,101,1.825,104,2.035,105,0.999,106,1.906,111,1.362,121,2.344,126,1.567,135,1.905,146,1.193,148,1.566,149,1.825,150,1.825,157,1.658,159,1.794,160,1.566,163,1.825,166,1.825,180,1.274,181,0.934,182,0.764,183,0.934,186,0.934,188,1.169,206,2.681,207,1.397,208,2.33,209,2.245,210,1.893,213,1.552,219,1.272,220,1.169,221,2.18,231,1.986,234,1.397,235,1.76,280,2.443,290,1.567,293,1.458,300,2.536,303,2.915,306,2.98,320,2.748,321,2.18,436,1.272,464,1.76,465,1.76,484,3.429,487,2.423,524,1.76,537,2.748,543,1.825,556,1.76,557,2.076,558,2.076,559,2.076,560,2.076,561,2.076,562,2.076,563,2.076,564,3.241,565,3.241,566,2.076,567,2.076,568,3.241,569,2.076,570,2.076,571,2.076]],["title/coverage.html",[572,3.494]],["body/coverage.html",[0,2.117,1,1.74,5,0.126,6,2.193,11,0.024,18,1.456,21,0.297,26,0.013,27,0.013,34,1.164,76,1.286,78,2.193,82,1.456,83,2.193,97,1.456,98,2.193,105,0.499,126,1.017,129,2.193,143,1.74,144,2.193,152,1.346,154,1.74,157,0.952,167,1.585,178,1.934,180,1.506,182,0.952,184,1.456,205,2.193,208,1.164,210,1.087,242,2.193,243,2.864,275,1.456,276,2.193,277,2.864,286,1.25,290,1.017,293,1.164,297,1.456,298,2.193,299,2.864,303,1.456,304,2.193,305,2.864,310,2.193,321,1.74,341,2.193,374,2.193,385,2.193,393,5.895,414,2.193,421,2.193,437,1.74,438,2.193,445,1.456,456,2.193,471,2.193,476,1.934,477,2.193,480,1.585,481,2.193,484,1.585,485,2.193,488,2.193,494,1.74,495,2.193,502,1.456,516,2.193,527,2.193,535,1.74,536,2.193,543,1.456,556,2.193,572,1.934,573,2.587,574,2.587,575,2.587,576,5.045,577,5.837,578,5.045,579,5.64,580,4.563,581,3.831,582,2.587,583,2.193,584,2.587,585,2.587,586,3.831,587,2.587,588,2.587]],["title/dependencies.html",[31,1.851,589,2.418]],["body/dependencies.html",[11,0.025,17,0.835,21,0.248,26,0.019,27,0.019,31,1.946,51,3.666,54,3.666,112,3.232,209,2.435,273,2.25,419,3.666,474,3.666,475,3.666,479,2.908,590,5.974,591,4.324,592,4.324,593,4.324,594,4.324,595,5.454,596,4.324,597,4.324,598,4.324,599,4.324,600,4.324,601,4.324,602,4.324,603,4.324,604,4.324,605,4.324,606,4.324]],["title/miscellaneous/functions.html",[607,2.418,608,3.488]],["body/miscellaneous/functions.html",[7,0.7,11,0.021,26,0.021,27,0.021,34,2.926,583,4.453,607,4.453,608,4.453,609,5.252]],["title/index.html",[7,0.38,610,2.852,611,2.852]],["body/index.html",[11,0.024,26,0.019,27,0.019,572,3.135,612,3.556,613,4.194,614,3.556,615,3.556,616,4.194,617,4.194,618,4.194,619,5.89,620,6.659,621,4.194,622,4.194,623,4.194,624,6.552,625,4.194,626,4.194,627,5.349,628,4.194,629,4.194,630,4.194,631,4.194,632,5.349,633,5.349,634,4.194,635,4.194,636,4.194]],["title/modules.html",[30,2.103]],["body/modules.html",[11,0.02,26,0.02,27,0.02,29,3.145,30,2.104,40,2.865,41,2.104,42,2.865,43,2.865,44,2.865,637,6.733,638,6.733,639,6.733,640,6.733]],["title/overview.html",[641,3.962]],["body/overview.html",[2,1.157,11,0.024,18,2.767,26,0.015,27,0.015,28,1.017,29,4.483,30,1.325,31,1.325,32,1.532,33,1.532,34,1.325,35,1.532,36,1.532,37,2.497,38,2.497,39,2.497,40,3.723,41,3.065,42,3.723,43,3.723,44,3.723,45,2.191,46,1.532,47,1.532,67,2.497,77,1.157,82,2.767,97,3.42,128,0.895,184,2.767,200,2.497,202,2.497,208,2.733,210,2.552,238,2.497,239,2.497,240,2.497,253,2.497,395,2.497,445,2.767,451,2.497,453,2.497,502,2.767,511,2.497,512,2.497,543,2.767,551,2.497,552,2.497,641,2.497,642,2.945]],["title/properties.html",[130,1.515,589,2.418]],["body/properties.html",[11,0.024,26,0.021,27,0.021,130,1.854,612,4.269,614,4.269,615,4.269,643,5.036,644,5.036,645,5.036,646,5.036,647,5.036,648,5.036,649,5.036,650,5.036]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":393,"title":{},"body":{"injectables/PaginationService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":334,"title":{},"body":{"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"injectables/PaginationService.html":{}}}],["1'})@isoptional",{"_index":360,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["1.0.0",{"_index":644,"title":{},"body":{"properties.html":{}}}],["1.41.1",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":395,"title":{},"body":{"injectables/PaginationService.html":{},"overview.html":{}}}],["10.0.0",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["1000",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["10000",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["1024",{"_index":335,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["14",{"_index":642,"title":{},"body":{"overview.html":{}}}],["1mb",{"_index":332,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["20",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["3",{"_index":256,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["30",{"_index":266,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["5",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["5.1.1",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["5.7.1",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":253,"title":{},"body":{"classes/CreateCoinDto.html":{},"overview.html":{}}}],["60000",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["7.1.0",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["7.1.17",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["accessors",{"_index":84,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["allowed",{"_index":329,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["amount",{"_index":278,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["api",{"_index":645,"title":{},"body":{"properties.html":{}}}],["api_key",{"_index":117,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["api_secret",{"_index":119,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["apikey",{"_index":86,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["apisecret",{"_index":87,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["app",{"_index":622,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asc",{"_index":365,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["async",{"_index":99,"title":{},"body":{"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["author",{"_index":648,"title":{},"body":{"properties.html":{}}}],["await",{"_index":123,"title":{},"body":{"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{}}}],["backend",{"_index":613,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":316,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["badrequestexception('icon",{"_index":322,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["balance",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"injectables/WalletService.html":{}}}],["between",{"_index":255,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["bitmosys",{"_index":614,"title":{},"body":{"index.html":{},"properties.html":{}}}],["body",{"_index":170,"title":{},"body":{"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["boolean",{"_index":379,"title":{},"body":{"classes/PaginatedResponseDTO.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brand",{"_index":245,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["brandcolor",{"_index":131,"title":{},"body":{"classes/Coin.html":{},"injectables/CoinService.html":{},"classes/CreateCoinDto.html":{}}}],["browse",{"_index":640,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":637,"title":{},"body":{"modules.html":{}}}],["buy",{"_index":287,"title":{},"body":{"classes/CreateTransactionDto.html":{},"injectables/TransactionService.html":{}}}],["characters",{"_index":257,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["check",{"_index":324,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["class",{"_index":21,"title":{"classes/Coin.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"classes/Transaction.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"classes/Wallet.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":128,"title":{},"body":{"classes/Coin.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"classes/Transaction.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"classes/Wallet.html":{},"overview.html":{}}}],["cloud_name",{"_index":115,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["cloudinary",{"_index":112,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/CoinService.html":{},"dependencies.html":{}}}],["cloudinary.v2.config",{"_index":114,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["cloudinary.v2.uploader.upload(file.path",{"_index":124,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["cloudinaryconfigservice",{"_index":82,"title":{"injectables/CloudinaryConfigService.html":{}},"body":{"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"modules/CommonModule.html":{},"coverage.html":{},"overview.html":{}}}],["cloudinaryservice",{"_index":97,"title":{"injectables/CloudinaryService.html":{}},"body":{"injectables/CloudinaryService.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"coverage.html":{},"overview.html":{}}}],["cloudname",{"_index":85,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coinmodule",{"_index":200,"title":{},"body":{"modules/CoinModule.html":{},"overview.html":{}}}],["cluster_coinmodule_imports",{"_index":201,"title":{},"body":{"modules/CoinModule.html":{}}}],["cluster_coinmodule_providers",{"_index":202,"title":{},"body":{"modules/CoinModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":238,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":239,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":240,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_transactionmodule",{"_index":451,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_transactionmodule_imports",{"_index":452,"title":{},"body":{"modules/TransactionModule.html":{}}}],["cluster_transactionmodule_providers",{"_index":453,"title":{},"body":{"modules/TransactionModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":511,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":513,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":512,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_walletmodule",{"_index":551,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_imports",{"_index":553,"title":{},"body":{"modules/WalletModule.html":{}}}],["cluster_walletmodule_providers",{"_index":552,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["coin",{"_index":126,"title":{"classes/Coin.html":{}},"body":{"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateWalletDto.html":{},"injectables/TransactionService.html":{},"classes/Wallet.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["coin.controller",{"_index":204,"title":{},"body":{"modules/CoinModule.html":{}}}],["coin.dto",{"_index":187,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"classes/UpdateCoinDto.html":{}}}],["coin.dto.ts",{"_index":243,"title":{},"body":{"classes/CreateCoinDto.html":{},"classes/UpdateCoinDto.html":{},"coverage.html":{}}}],["coin.dto.ts:12",{"_index":267,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["coin.dto.ts:16",{"_index":258,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["coin.dto.ts:19",{"_index":265,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["coin.dto.ts:22",{"_index":263,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["coin.dto.ts:25",{"_index":249,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["coin.exchangerate",{"_index":466,"title":{},"body":{"injectables/TransactionService.html":{}}}],["coin.service",{"_index":185,"title":{},"body":{"controllers/CoinController.html":{},"modules/CoinModule.html":{}}}],["coin/coin.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["coincontroller",{"_index":143,"title":{"controllers/CoinController.html":{}},"body":{"controllers/CoinController.html":{},"modules/CoinModule.html":{},"coverage.html":{}}}],["coinid",{"_index":306,"title":{},"body":{"classes/CreateWalletDto.html":{},"classes/Wallet.html":{},"injectables/WalletService.html":{}}}],["coinmodule",{"_index":40,"title":{"modules/CoinModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules.html":{},"overview.html":{}}}],["coinservice",{"_index":184,"title":{"injectables/CoinService.html":{}},"body":{"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"coverage.html":{},"overview.html":{}}}],["coinsymbol",{"_index":132,"title":{},"body":{"classes/Coin.html":{},"injectables/CoinService.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{}}}],["color",{"_index":246,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["commonmodule",{"_index":41,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":107,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["connect",{"_index":568,"title":{},"body":{"injectables/WalletService.html":{}}}],["const",{"_index":121,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["constructor",{"_index":101,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/CoinService.html":{},"injectables/PaginationService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["constructor(configservice",{"_index":102,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["constructor(paginationservice",{"_index":207,"title":{},"body":{"injectables/CoinService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["constructor(prisma",{"_index":386,"title":{},"body":{"injectables/PaginationService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{},"coverage.html":{}}}],["controller('coin",{"_index":189,"title":{},"body":{"controllers/CoinController.html":{}}}],["controller('transaction",{"_index":447,"title":{},"body":{"controllers/TransactionController.html":{}}}],["controller('user",{"_index":504,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('wallet",{"_index":545,"title":{},"body":{"controllers/WalletController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["coverage",{"_index":572,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":146,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["create(@body",{"_index":191,"title":{},"body":{"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["create(createcoindto",{"_index":151,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{}}}],["create(createtransactiondto",{"_index":439,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{}}}],["create(createuserdto",{"_index":496,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(createwalletdto",{"_index":537,"title":{},"body":{"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["createcoindto",{"_index":152,"title":{"classes/CreateCoinDto.html":{}},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/CreateCoinDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/UpdateCoinDto.html":{},"coverage.html":{}}}],["createdcoin",{"_index":229,"title":{},"body":{"injectables/CoinService.html":{}}}],["createtransactiondto",{"_index":275,"title":{"classes/CreateTransactionDto.html":{}},"body":{"classes/CreateTransactionDto.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/UpdateTransactionDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":297,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createwalletdto",{"_index":303,"title":{"classes/CreateWalletDto.html":{}},"body":{"classes/CreateWalletDto.html":{},"classes/UpdateWalletDto.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["data",{"_index":231,"title":{},"body":{"injectables/CoinService.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["date",{"_index":427,"title":{},"body":{"classes/Transaction.html":{}}}],["db",{"_index":616,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CoinController.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["delete",{"_index":171,"title":{},"body":{"controllers/CoinController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["delete(':id",{"_index":164,"title":{},"body":{"controllers/CoinController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":366,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["description",{"_index":612,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":623,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":186,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["dto/pagination",{"_index":391,"title":{},"body":{"injectables/PaginationService.html":{}}}],["dto/update",{"_index":188,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["e2e",{"_index":634,"title":{},"body":{"index.html":{}}}],["equal",{"_index":359,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["everything",{"_index":339,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["example",{"_index":619,"title":{},"body":{"index.html":{}}}],["exceeds",{"_index":337,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["exchange",{"_index":260,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["exchangerate",{"_index":133,"title":{},"body":{"classes/Coin.html":{},"injectables/CoinService.html":{},"classes/CreateCoinDto.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["express",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["express.multer.file",{"_index":109,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreateCoinDto.html":{}}}],["extends",{"_index":415,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{}}}],["field",{"_index":350,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["file.mimetype.startswith('image",{"_index":325,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["file.size",{"_index":336,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["filter",{"_index":349,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["filterfield",{"_index":342,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["filteroperator",{"_index":343,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["filterquery",{"_index":344,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["findall",{"_index":147,"title":{},"body":{"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{}}}],["findall(paginatedrequest",{"_index":156,"title":{},"body":{"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{}}}],["findallwithpagination",{"_index":206,"title":{},"body":{"injectables/CoinService.html":{},"injectables/PaginationService.html":{},"injectables/TransactionService.html":{},"injectables/WalletService.html":{}}}],["findallwithpagination(model",{"_index":388,"title":{},"body":{"injectables/PaginationService.html":{}}}],["findallwithpagination(paginatedrequest",{"_index":213,"title":{},"body":{"injectables/CoinService.html":{},"injectables/TransactionService.html":{},"injectables/WalletService.html":{}}}],["findone",{"_index":148,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["findone(@param('id",{"_index":194,"title":{},"body":{"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["findone(id",{"_index":160,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["fine",{"_index":340,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["folder",{"_index":125,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["format",{"_index":327,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["found",{"_index":564,"title":{},"body":{"injectables/WalletService.html":{}}}],["function",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":608,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":161,"title":{},"body":{"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["getapikey",{"_index":90,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["getapisecret",{"_index":92,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["getcloudname",{"_index":88,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":610,"title":{"index.html":{}},"body":{}}],["greater",{"_index":358,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["handletransaction",{"_index":457,"title":{},"body":{"injectables/TransactionService.html":{}}}],["handletransaction(user",{"_index":462,"title":{},"body":{"injectables/TransactionService.html":{}}}],["hello",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["hex",{"_index":248,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["httpexception",{"_index":464,"title":{},"body":{"injectables/TransactionService.html":{},"injectables/WalletService.html":{}}}],["httpexception('coin",{"_index":563,"title":{},"body":{"injectables/WalletService.html":{}}}],["httpexception('user",{"_index":566,"title":{},"body":{"injectables/WalletService.html":{}}}],["httpstatus",{"_index":465,"title":{},"body":{"injectables/TransactionService.html":{},"injectables/WalletService.html":{}}}],["httpstatus.not_found",{"_index":565,"title":{},"body":{"injectables/WalletService.html":{}}}],["icon",{"_index":222,"title":{},"body":{"injectables/CoinService.html":{},"classes/CreateCoinDto.html":{}}}],["iconurl",{"_index":134,"title":{},"body":{"classes/Coin.html":{},"injectables/CoinService.html":{}}}],["id",{"_index":135,"title":{},"body":{"classes/Coin.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateWalletDto.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["identifier",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":224,"title":{},"body":{"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{}}}],["images",{"_index":328,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["imagevalidationpipe",{"_index":154,"title":{"injectables/ImageValidationPipe.html":{}},"body":{"controllers/CoinController.html":{},"injectables/ImageValidationPipe.html":{},"coverage.html":{}}}],["implements",{"_index":318,"title":{},"body":{"injectables/ImageValidationPipe.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["include",{"_index":469,"title":{},"body":{"injectables/TransactionService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{}}}],["injectable",{"_index":76,"title":{"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["injectables",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{},"overview.html":{}}}],["installation",{"_index":618,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":621,"title":{},"body":{"index.html":{}}}],["integer",{"_index":372,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["integer'})@min(1",{"_index":357,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["invalid",{"_index":326,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["isarray",{"_index":377,"title":{},"body":{"classes/PaginatedResponseDTO.html":{}}}],["isboolean",{"_index":380,"title":{},"body":{"classes/PaginatedResponseDTO.html":{}}}],["isenum",{"_index":295,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["isenum(['buy",{"_index":284,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["ishexcolor",{"_index":268,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["ishexcolor({message",{"_index":244,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["isint",{"_index":369,"title":{},"body":{"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{}}}],["isint()@min(1",{"_index":382,"title":{},"body":{"classes/PaginatedResponseDTO.html":{}}}],["isint({message",{"_index":356,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["islastpage",{"_index":375,"title":{},"body":{"classes/PaginatedResponseDTO.html":{}}}],["ismongoid",{"_index":296,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/CreateWalletDto.html":{}}}],["ismongoid({message",{"_index":289,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/CreateWalletDto.html":{}}}],["isnotempty",{"_index":269,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["isnotempty({message",{"_index":264,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["isoptional",{"_index":370,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["ispositive",{"_index":270,"title":{},"body":{"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{}}}],["ispositive({message",{"_index":259,"title":{},"body":{"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{}}}],["isstring",{"_index":271,"title":{},"body":{"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/PaginatedRequestDTO.html":{}}}],["isstring({message",{"_index":250,"title":{},"body":{"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/PaginatedRequestDTO.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["length",{"_index":272,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["length(3",{"_index":274,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["less",{"_index":331,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["license",{"_index":646,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["long",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maximum",{"_index":338,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["maxsizeinbytes",{"_index":333,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["medium",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["message",{"_index":254,"title":{},"body":{"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"classes/PaginatedRequestDTO.html":{}}}],["metadata",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["min",{"_index":371,"title":{},"body":{"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{}}}],["min(1",{"_index":373,"title":{},"body":{"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{}}}],["miscellaneous",{"_index":607,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mode",{"_index":627,"title":{},"body":{"index.html":{}}}],["model",{"_index":390,"title":{},"body":{"injectables/PaginationService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":291,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/CreateWalletDto.html":{}}}],["name",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/CreateCoinDto.html":{},"classes/CreateUserDto.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":474,"title":{},"body":{"classes/UpdateCoinDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":479,"title":{},"body":{"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":321,"title":{},"body":{"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["number",{"_index":138,"title":{},"body":{"classes/Coin.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"classes/Wallet.html":{}}}],["onmoduleinit",{"_index":417,"title":{},"body":{"injectables/PrismaService.html":{}}}],["operator",{"_index":353,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["optional",{"_index":106,"title":{},"body":{"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["order",{"_index":367,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["orderby",{"_index":396,"title":{},"body":{"injectables/PaginationService.html":{}}}],["orderby[paginatedrequest.sortby",{"_index":405,"title":{},"body":{"injectables/PaginationService.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["overview",{"_index":641,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":589,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":345,"title":{},"body":{"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{}}}],["pagesize",{"_index":346,"title":{},"body":{"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{}}}],["paginatedrequest",{"_index":159,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["paginatedrequest.filterfield",{"_index":400,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedrequest.filteroperator",{"_index":401,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedrequest.filterquery",{"_index":399,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedrequest.page",{"_index":397,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedrequest.pagesize",{"_index":398,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedrequest.sortby",{"_index":403,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedrequest.sortorder",{"_index":404,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedrequestdto",{"_index":157,"title":{"classes/PaginatedRequestDTO.html":{}},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/PaginatedRequestDTO.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["paginatedresponse",{"_index":409,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedresponse.data",{"_index":410,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedresponse.islastpage",{"_index":413,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedresponse.page",{"_index":412,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedresponse.pagesize",{"_index":411,"title":{},"body":{"injectables/PaginationService.html":{}}}],["paginatedresponsedto",{"_index":182,"title":{"classes/PaginatedResponseDTO.html":{}},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["paginationservice",{"_index":208,"title":{"injectables/PaginationService.html":{}},"body":{"injectables/CoinService.html":{},"modules/CommonModule.html":{},"injectables/PaginationService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":172,"title":{},"body":{"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["param('id",{"_index":196,"title":{},"body":{"controllers/CoinController.html":{}}}],["parameters",{"_index":104,"title":{},"body":{"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["partialtype",{"_index":473,"title":{},"body":{"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{}}}],["partialtype(createcoindto",{"_index":472,"title":{},"body":{"classes/UpdateCoinDto.html":{}}}],["partialtype(createtransactiondto",{"_index":478,"title":{},"body":{"classes/UpdateTransactionDto.html":{}}}],["partialtype(createuserdto",{"_index":482,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createwalletdto",{"_index":486,"title":{},"body":{"classes/UpdateWalletDto.html":{}}}],["patch",{"_index":173,"title":{},"body":{"controllers/CoinController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["patch(':id",{"_index":168,"title":{},"body":{"controllers/CoinController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["pipetransform",{"_index":317,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["pnpm",{"_index":620,"title":{},"body":{"index.html":{}}}],["positive",{"_index":262,"title":{},"body":{"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{}}}],["post",{"_index":174,"title":{},"body":{"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["post()@usepipes(new",{"_index":153,"title":{},"body":{"controllers/CoinController.html":{}}}],["prefix",{"_index":145,"title":{},"body":{"controllers/CoinController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["prisma",{"_index":209,"title":{},"body":{"injectables/CoinService.html":{},"injectables/PaginationService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["prisma/client",{"_index":419,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":416,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":210,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/CoinService.html":{},"modules/CommonModule.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":221,"title":{},"body":{"injectables/CoinService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["process.env.cloudinary_api_key",{"_index":95,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["process.env.cloudinary_api_secret",{"_index":96,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["process.env.cloudinary_cloud_name",{"_index":94,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["production",{"_index":629,"title":{},"body":{"index.html":{}}}],["promise",{"_index":111,"title":{},"body":{"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["properties",{"_index":130,"title":{"properties.html":{}},"body":{"classes/Coin.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"classes/Transaction.html":{},"classes/User.html":{},"classes/Wallet.html":{},"properties.html":{}}}],["provide",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["q423",{"_index":615,"title":{},"body":{"index.html":{},"properties.html":{}}}],["query",{"_index":175,"title":{},"body":{"controllers/CoinController.html":{},"classes/PaginatedRequestDTO.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["rate",{"_index":261,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["record",{"_index":228,"title":{},"body":{"injectables/CoinService.html":{}}}],["reflect",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":149,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["remove(@param('id",{"_index":198,"title":{},"body":{"controllers/CoinController.html":{},"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["remove(id",{"_index":163,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["request.dto",{"_index":181,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["request.dto.ts",{"_index":341,"title":{},"body":{"classes/PaginatedRequestDTO.html":{},"coverage.html":{}}}],["request.dto.ts:12",{"_index":362,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["request.dto.ts:16",{"_index":355,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["request.dto.ts:20",{"_index":352,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["request.dto.ts:24",{"_index":354,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["request.dto.ts:28",{"_index":368,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["request.dto.ts:32",{"_index":364,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["request.dto.ts:7",{"_index":361,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["required",{"_index":323,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["response.dto",{"_index":183,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["response.dto.ts",{"_index":374,"title":{},"body":{"classes/PaginatedResponseDTO.html":{},"coverage.html":{}}}],["response.dto.ts:13",{"_index":383,"title":{},"body":{"classes/PaginatedResponseDTO.html":{}}}],["response.dto.ts:16",{"_index":381,"title":{},"body":{"classes/PaginatedResponseDTO.html":{}}}],["response.dto.ts:5",{"_index":378,"title":{},"body":{"classes/PaginatedResponseDTO.html":{}}}],["response.dto.ts:9",{"_index":384,"title":{},"body":{"classes/PaginatedResponseDTO.html":{}}}],["result",{"_index":122,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["result.secure_url",{"_index":127,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CloudinaryService.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/ImageValidationPipe.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["run",{"_index":624,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["sagyam",{"_index":649,"title":{},"body":{"properties.html":{}}}],["save",{"_index":227,"title":{},"body":{"injectables/CoinService.html":{}}}],["schema",{"_index":617,"title":{},"body":{"index.html":{}}}],["sell",{"_index":285,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["short",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":330,"title":{},"body":{"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{}}}],["skip",{"_index":392,"title":{},"body":{"injectables/PaginationService.html":{}}}],["sort",{"_index":363,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["sortby",{"_index":347,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["sortorder",{"_index":348,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"modules/CoinModule.html":{},"injectables/CoinService.html":{},"modules/CommonModule.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"injectables/PrismaService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"classes/UpdateCoinDto.html":{},"classes/UpdateTransactionDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{}}}],["src/.../main.ts",{"_index":609,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["src/coin/coin.controller.ts",{"_index":144,"title":{},"body":{"controllers/CoinController.html":{},"coverage.html":{}}}],["src/coin/coin.controller.ts:26",{"_index":155,"title":{},"body":{"controllers/CoinController.html":{}}}],["src/coin/coin.controller.ts:31",{"_index":158,"title":{},"body":{"controllers/CoinController.html":{}}}],["src/coin/coin.controller.ts:38",{"_index":162,"title":{},"body":{"controllers/CoinController.html":{}}}],["src/coin/coin.controller.ts:43",{"_index":169,"title":{},"body":{"controllers/CoinController.html":{}}}],["src/coin/coin.controller.ts:51",{"_index":165,"title":{},"body":{"controllers/CoinController.html":{}}}],["src/coin/coin.module.ts",{"_index":203,"title":{},"body":{"modules/CoinModule.html":{}}}],["src/coin/coin.service.ts",{"_index":205,"title":{},"body":{"injectables/CoinService.html":{},"coverage.html":{}}}],["src/coin/coin.service.ts:12",{"_index":211,"title":{},"body":{"injectables/CoinService.html":{}}}],["src/coin/coin.service.ts:19",{"_index":212,"title":{},"body":{"injectables/CoinService.html":{}}}],["src/coin/coin.service.ts:45",{"_index":214,"title":{},"body":{"injectables/CoinService.html":{}}}],["src/coin/coin.service.ts:54",{"_index":215,"title":{},"body":{"injectables/CoinService.html":{}}}],["src/coin/coin.service.ts:60",{"_index":217,"title":{},"body":{"injectables/CoinService.html":{}}}],["src/coin/coin.service.ts:74",{"_index":216,"title":{},"body":{"injectables/CoinService.html":{}}}],["src/coin/dto/create",{"_index":242,"title":{},"body":{"classes/CreateCoinDto.html":{},"coverage.html":{}}}],["src/coin/dto/update",{"_index":471,"title":{},"body":{"classes/UpdateCoinDto.html":{},"coverage.html":{}}}],["src/coin/entities/coin.entity",{"_index":177,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"injectables/TransactionService.html":{},"classes/Wallet.html":{}}}],["src/coin/entities/coin.entity.ts",{"_index":129,"title":{},"body":{"classes/Coin.html":{},"coverage.html":{}}}],["src/coin/entities/coin.entity.ts:2",{"_index":141,"title":{},"body":{"classes/Coin.html":{}}}],["src/coin/entities/coin.entity.ts:3",{"_index":142,"title":{},"body":{"classes/Coin.html":{}}}],["src/coin/entities/coin.entity.ts:4",{"_index":137,"title":{},"body":{"classes/Coin.html":{}}}],["src/coin/entities/coin.entity.ts:5",{"_index":140,"title":{},"body":{"classes/Coin.html":{}}}],["src/coin/entities/coin.entity.ts:6",{"_index":136,"title":{},"body":{"classes/Coin.html":{}}}],["src/coin/entities/coin.entity.ts:7",{"_index":139,"title":{},"body":{"classes/Coin.html":{}}}],["src/coin/pipes/image",{"_index":178,"title":{},"body":{"controllers/CoinController.html":{},"injectables/ImageValidationPipe.html":{},"coverage.html":{}}}],["src/common/cloudinary.config",{"_index":113,"title":{},"body":{"injectables/CloudinaryService.html":{},"modules/CommonModule.html":{}}}],["src/common/cloudinary.config.ts",{"_index":83,"title":{},"body":{"injectables/CloudinaryConfigService.html":{},"coverage.html":{}}}],["src/common/cloudinary.config.ts:13",{"_index":93,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["src/common/cloudinary.config.ts:5",{"_index":89,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["src/common/cloudinary.config.ts:9",{"_index":91,"title":{},"body":{"injectables/CloudinaryConfigService.html":{}}}],["src/common/cloudinary.service",{"_index":218,"title":{},"body":{"injectables/CoinService.html":{},"modules/CommonModule.html":{}}}],["src/common/cloudinary.service.ts",{"_index":98,"title":{},"body":{"injectables/CloudinaryService.html":{},"coverage.html":{}}}],["src/common/cloudinary.service.ts:15",{"_index":110,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/common/cloudinary.service.ts:6",{"_index":103,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/common/common.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["src/common/common.module.ts",{"_index":241,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/dto/pagination",{"_index":180,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["src/common/pagination.service",{"_index":219,"title":{},"body":{"injectables/CoinService.html":{},"modules/CommonModule.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["src/common/pagination.service.ts",{"_index":385,"title":{},"body":{"injectables/PaginationService.html":{},"coverage.html":{}}}],["src/common/pagination.service.ts:10",{"_index":389,"title":{},"body":{"injectables/PaginationService.html":{}}}],["src/common/pagination.service.ts:7",{"_index":387,"title":{},"body":{"injectables/PaginationService.html":{}}}],["src/common/prisma.service",{"_index":220,"title":{},"body":{"injectables/CoinService.html":{},"modules/CommonModule.html":{},"injectables/PaginationService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["src/common/prisma.service.ts",{"_index":414,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/common/prisma.service.ts:6",{"_index":418,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/main.ts",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/transaction/dto/create",{"_index":276,"title":{},"body":{"classes/CreateTransactionDto.html":{},"coverage.html":{}}}],["src/transaction/dto/update",{"_index":477,"title":{},"body":{"classes/UpdateTransactionDto.html":{},"coverage.html":{}}}],["src/transaction/entities/transaction.entity",{"_index":443,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"classes/Wallet.html":{}}}],["src/transaction/entities/transaction.entity.ts",{"_index":421,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["src/transaction/entities/transaction.entity.ts:10",{"_index":428,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/entities/transaction.entity.ts:11",{"_index":432,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/entities/transaction.entity.ts:12",{"_index":431,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/entities/transaction.entity.ts:13",{"_index":434,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/entities/transaction.entity.ts:14",{"_index":433,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/entities/transaction.entity.ts:5",{"_index":426,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/entities/transaction.entity.ts:6",{"_index":424,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/entities/transaction.entity.ts:7",{"_index":429,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/entities/transaction.entity.ts:8",{"_index":430,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/entities/transaction.entity.ts:9",{"_index":425,"title":{},"body":{"classes/Transaction.html":{}}}],["src/transaction/transaction.controller.ts",{"_index":438,"title":{},"body":{"controllers/TransactionController.html":{},"coverage.html":{}}}],["src/transaction/transaction.controller.ts:13",{"_index":440,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:18",{"_index":441,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.controller.ts:25",{"_index":442,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/transaction/transaction.module.ts",{"_index":454,"title":{},"body":{"modules/TransactionModule.html":{}}}],["src/transaction/transaction.service.ts",{"_index":456,"title":{},"body":{"injectables/TransactionService.html":{},"coverage.html":{}}}],["src/transaction/transaction.service.ts:13",{"_index":458,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:132",{"_index":460,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:141",{"_index":461,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:19",{"_index":463,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/transaction/transaction.service.ts:91",{"_index":459,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/user/dto/create",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":481,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":435,"title":{},"body":{"classes/Transaction.html":{},"injectables/TransactionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{}}}],["src/user/entities/user.entity.ts",{"_index":488,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":490,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":491,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":489,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":493,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":492,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":495,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:23",{"_index":497,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:28",{"_index":498,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:35",{"_index":499,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:40",{"_index":501,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:45",{"_index":500,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":514,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":516,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":517,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:16",{"_index":518,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:26",{"_index":519,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:35",{"_index":520,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:42",{"_index":522,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:53",{"_index":521,"title":{},"body":{"injectables/UserService.html":{}}}],["src/wallet/dto/create",{"_index":304,"title":{},"body":{"classes/CreateWalletDto.html":{},"coverage.html":{}}}],["src/wallet/dto/update",{"_index":485,"title":{},"body":{"classes/UpdateWalletDto.html":{},"coverage.html":{}}}],["src/wallet/entities/wallet.entity",{"_index":436,"title":{},"body":{"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["src/wallet/entities/wallet.entity.ts",{"_index":527,"title":{},"body":{"classes/Wallet.html":{},"coverage.html":{}}}],["src/wallet/entities/wallet.entity.ts:10",{"_index":530,"title":{},"body":{"classes/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:11",{"_index":529,"title":{},"body":{"classes/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:12",{"_index":532,"title":{},"body":{"classes/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:6",{"_index":531,"title":{},"body":{"classes/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:7",{"_index":528,"title":{},"body":{"classes/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:8",{"_index":534,"title":{},"body":{"classes/Wallet.html":{}}}],["src/wallet/entities/wallet.entity.ts:9",{"_index":533,"title":{},"body":{"classes/Wallet.html":{}}}],["src/wallet/wallet.controller.ts",{"_index":536,"title":{},"body":{"controllers/WalletController.html":{},"coverage.html":{}}}],["src/wallet/wallet.controller.ts:23",{"_index":538,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.controller.ts:28",{"_index":539,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.controller.ts:35",{"_index":540,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.controller.ts:40",{"_index":542,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.controller.ts:45",{"_index":541,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.module.ts",{"_index":554,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/wallet/wallet.service.ts",{"_index":556,"title":{},"body":{"injectables/WalletService.html":{},"coverage.html":{}}}],["src/wallet/wallet.service.ts:11",{"_index":557,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:16",{"_index":558,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:46",{"_index":559,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:55",{"_index":560,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:59",{"_index":562,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:69",{"_index":561,"title":{},"body":{"injectables/WalletService.html":{}}}],["start",{"_index":625,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":628,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":630,"title":{},"body":{"index.html":{}}}],["started",{"_index":611,"title":{"index.html":{}},"body":{}}],["statements",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CloudinaryConfigService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"classes/PaginatedRequestDTO.html":{},"injectables/PaginationService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["string'})@isoptional",{"_index":351,"title":{},"body":{"classes/PaginatedRequestDTO.html":{}}}],["string'})@length(3",{"_index":252,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["support",{"_index":638,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":639,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":251,"title":{},"body":{"classes/CreateCoinDto.html":{}}}],["t",{"_index":376,"title":{},"body":{"classes/PaginatedResponseDTO.html":{}}}],["table",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":394,"title":{},"body":{"injectables/PaginationService.html":{}}}],["test",{"_index":633,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":636,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":635,"title":{},"body":{"index.html":{}}}],["tests",{"_index":632,"title":{},"body":{"index.html":{}}}],["thapa",{"_index":650,"title":{},"body":{"properties.html":{}}}],["this.$connect",{"_index":420,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cloudinaryservice.uploadimage(icon",{"_index":226,"title":{},"body":{"injectables/CoinService.html":{}}}],["this.coinservice.create(createcoindto",{"_index":192,"title":{},"body":{"controllers/CoinController.html":{}}}],["this.coinservice.findallwithpagination(paginatedrequest",{"_index":193,"title":{},"body":{"controllers/CoinController.html":{}}}],["this.coinservice.findone(id",{"_index":195,"title":{},"body":{"controllers/CoinController.html":{}}}],["this.coinservice.remove(id",{"_index":199,"title":{},"body":{"controllers/CoinController.html":{}}}],["this.coinservice.update(id",{"_index":197,"title":{},"body":{"controllers/CoinController.html":{}}}],["this.configservice.apikey",{"_index":118,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["this.configservice.apisecret",{"_index":120,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["this.configservice.cloudname",{"_index":116,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["this.paginationservice.findallwithpagination",{"_index":234,"title":{},"body":{"injectables/CoinService.html":{},"injectables/TransactionService.html":{},"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["this.prisma.coin.create",{"_index":230,"title":{},"body":{"injectables/CoinService.html":{}}}],["this.prisma.coin.delete",{"_index":237,"title":{},"body":{"injectables/CoinService.html":{}}}],["this.prisma.coin.findunique",{"_index":235,"title":{},"body":{"injectables/CoinService.html":{},"injectables/WalletService.html":{}}}],["this.prisma.coin.update",{"_index":236,"title":{},"body":{"injectables/CoinService.html":{}}}],["this.prisma.transaction.findunique",{"_index":468,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.prisma.user.create",{"_index":523,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":526,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":524,"title":{},"body":{"injectables/UserService.html":{},"injectables/WalletService.html":{}}}],["this.prisma.user.update",{"_index":525,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.wallet.create",{"_index":567,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.prisma.wallet.delete",{"_index":571,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.prisma.wallet.findunique",{"_index":569,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.prisma.wallet.update",{"_index":570,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.prisma[model].count",{"_index":408,"title":{},"body":{"injectables/PaginationService.html":{}}}],["this.prisma[model].findmany",{"_index":406,"title":{},"body":{"injectables/PaginationService.html":{}}}],["this.transactionservice.create(createtransactiondto",{"_index":448,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.findallwithpagination(paginatedrequest",{"_index":449,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.transactionservice.findone(id",{"_index":450,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.userservice.create(createuserdto",{"_index":505,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall(paginatedrequest",{"_index":506,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":507,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.remove(id",{"_index":510,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":509,"title":{},"body":{"controllers/UserController.html":{}}}],["this.walletservice.create(createwalletdto",{"_index":546,"title":{},"body":{"controllers/WalletController.html":{}}}],["this.walletservice.findallwithpagination(paginatedrequest",{"_index":547,"title":{},"body":{"controllers/WalletController.html":{}}}],["this.walletservice.findone(id",{"_index":548,"title":{},"body":{"controllers/WalletController.html":{}}}],["this.walletservice.remove(id",{"_index":550,"title":{},"body":{"controllers/WalletController.html":{}}}],["this.walletservice.update(id",{"_index":549,"title":{},"body":{"controllers/WalletController.html":{}}}],["throttlerguard",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":320,"title":{},"body":{"injectables/ImageValidationPipe.html":{},"injectables/WalletService.html":{}}}],["timestamp",{"_index":422,"title":{},"body":{"classes/Transaction.html":{}}}],["totalcount",{"_index":407,"title":{},"body":{"injectables/PaginationService.html":{}}}],["transaction",{"_index":286,"title":{"classes/Transaction.html":{}},"body":{"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"classes/Wallet.html":{},"coverage.html":{}}}],["transaction.controller",{"_index":455,"title":{},"body":{"modules/TransactionModule.html":{}}}],["transaction.dto",{"_index":444,"title":{},"body":{"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/UpdateTransactionDto.html":{}}}],["transaction.dto.ts",{"_index":277,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/UpdateTransactionDto.html":{},"coverage.html":{}}}],["transaction.dto.ts:10",{"_index":288,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:13",{"_index":283,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:16",{"_index":292,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:19",{"_index":294,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:5",{"_index":282,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.service",{"_index":446,"title":{},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{}}}],["transaction/transaction.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["transactioncontroller",{"_index":437,"title":{"controllers/TransactionController.html":{}},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"coverage.html":{}}}],["transactionmodule",{"_index":42,"title":{"modules/TransactionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TransactionModule.html":{},"modules.html":{},"overview.html":{}}}],["transactions",{"_index":233,"title":{},"body":{"injectables/CoinService.html":{},"classes/User.html":{},"classes/Wallet.html":{}}}],["transactionservice",{"_index":445,"title":{"injectables/TransactionService.html":{}},"body":{"controllers/TransactionController.html":{},"modules/TransactionModule.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["transactiontype",{"_index":279,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["transactionvalue",{"_index":423,"title":{},"body":{"classes/Transaction.html":{},"injectables/TransactionService.html":{}}}],["transform",{"_index":311,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["transform(value",{"_index":312,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["transformer",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":470,"title":{},"body":{"injectables/TransactionService.html":{}}}],["ttl",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":105,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/Coin.html":{},"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"injectables/ImageValidationPipe.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"injectables/PaginationService.html":{},"classes/Transaction.html":{},"controllers/TransactionController.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["types",{"_index":475,"title":{},"body":{"classes/UpdateCoinDto.html":{},"dependencies.html":{}}}],["unit",{"_index":631,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":315,"title":{},"body":{"injectables/ImageValidationPipe.html":{},"injectables/TransactionService.html":{}}}],["unlicensed",{"_index":647,"title":{},"body":{"properties.html":{}}}],["update",{"_index":150,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["update(@param('id",{"_index":508,"title":{},"body":{"controllers/UserController.html":{},"controllers/WalletController.html":{}}}],["update(id",{"_index":166,"title":{},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["updatecoindto",{"_index":167,"title":{"classes/UpdateCoinDto.html":{}},"body":{"controllers/CoinController.html":{},"injectables/CoinService.html":{},"classes/UpdateCoinDto.html":{},"coverage.html":{}}}],["updatetransactiondto",{"_index":476,"title":{"classes/UpdateTransactionDto.html":{}},"body":{"classes/UpdateTransactionDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":480,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updatewalletdto",{"_index":484,"title":{"classes/UpdateWalletDto.html":{}},"body":{"classes/UpdateWalletDto.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["upload",{"_index":223,"title":{},"body":{"injectables/CoinService.html":{}}}],["uploadimage",{"_index":100,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["uploadimage(file",{"_index":108,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["url",{"_index":225,"title":{},"body":{"injectables/CoinService.html":{}}}],["useclass",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":176,"title":{},"body":{"controllers/CoinController.html":{}}}],["usepipes(new",{"_index":190,"title":{},"body":{"controllers/CoinController.html":{}}}],["user",{"_index":290,"title":{"classes/User.html":{}},"body":{"classes/CreateTransactionDto.html":{},"classes/CreateWalletDto.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Wallet.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["user.balance",{"_index":467,"title":{},"body":{"injectables/TransactionService.html":{}}}],["user.controller",{"_index":515,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":483,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.service",{"_index":503,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":494,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":280,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/CreateWalletDto.html":{},"classes/Transaction.html":{},"classes/Wallet.html":{},"injectables/WalletService.html":{}}}],["usermodule",{"_index":43,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userservice",{"_index":502,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":247,"title":{},"body":{"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateWalletDto.html":{}}}],["validation.pipe",{"_index":179,"title":{},"body":{"controllers/CoinController.html":{}}}],["validation.pipe.ts",{"_index":310,"title":{},"body":{"injectables/ImageValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:6",{"_index":313,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["validator",{"_index":273,"title":{},"body":{"classes/CreateCoinDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWalletDto.html":{},"classes/PaginatedRequestDTO.html":{},"classes/PaginatedResponseDTO.html":{},"dependencies.html":{}}}],["value",{"_index":314,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["value.icon",{"_index":319,"title":{},"body":{"injectables/ImageValidationPipe.html":{}}}],["version",{"_index":643,"title":{},"body":{"properties.html":{}}}],["wallet",{"_index":293,"title":{"classes/Wallet.html":{}},"body":{"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{},"injectables/TransactionService.html":{},"classes/User.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"coverage.html":{}}}],["wallet.controller",{"_index":555,"title":{},"body":{"modules/WalletModule.html":{}}}],["wallet.dto",{"_index":487,"title":{},"body":{"classes/UpdateWalletDto.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["wallet.dto.ts",{"_index":305,"title":{},"body":{"classes/CreateWalletDto.html":{},"classes/UpdateWalletDto.html":{},"coverage.html":{}}}],["wallet.dto.ts:11",{"_index":309,"title":{},"body":{"classes/CreateWalletDto.html":{}}}],["wallet.dto.ts:5",{"_index":307,"title":{},"body":{"classes/CreateWalletDto.html":{}}}],["wallet.dto.ts:8",{"_index":308,"title":{},"body":{"classes/CreateWalletDto.html":{}}}],["wallet.service",{"_index":544,"title":{},"body":{"controllers/WalletController.html":{},"modules/WalletModule.html":{}}}],["wallet/wallet.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["walletcontroller",{"_index":535,"title":{"controllers/WalletController.html":{}},"body":{"controllers/WalletController.html":{},"modules/WalletModule.html":{},"coverage.html":{}}}],["walletid",{"_index":281,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/Transaction.html":{}}}],["walletmodule",{"_index":44,"title":{"modules/WalletModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["wallets",{"_index":232,"title":{},"body":{"injectables/CoinService.html":{},"classes/User.html":{}}}],["walletservice",{"_index":543,"title":{"injectables/WalletService.html":{}},"body":{"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"coverage.html":{},"overview.html":{}}}],["watch",{"_index":626,"title":{},"body":{"index.html":{}}}],["where[paginatedrequest.filterfield",{"_index":402,"title":{},"body":{"injectables/PaginationService.html":{}}}],["world",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CoinModule.html":{},"modules/CommonModule.html":{},"modules/TransactionModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCoinModule\n\nCoinModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoinModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nAppModule -->\n\nWalletModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoinModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            TransactionModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { CommonModule } from 'src/common/common.module';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CoinModule } from './coin/coin.module';\nimport { TransactionModule } from './transaction/transaction.module';\nimport { UserModule } from './user/user.module';\nimport { WalletModule } from './wallet/wallet.module';\n\n@Module({\n  imports: [\n    CommonModule,\n    CoinModule,\n    ThrottlerModule.forRoot([\n      {\n        name: 'short',\n        ttl: 1000,\n        limit: 5,\n      },\n      {\n        name: 'medium',\n        ttl: 10000,\n        limit: 20,\n      },\n      {\n        name: 'long',\n        ttl: 60000,\n        limit: 100,\n      },\n    ]),\n    UserModule,\n    WalletModule,\n    TransactionModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CloudinaryConfigService.html":{"url":"injectables/CloudinaryConfigService.html","title":"injectable - CloudinaryConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CloudinaryConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/cloudinary.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cloudName\n                                \n                                \n                                    apiKey\n                                \n                                \n                                    apiSecret\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cloudName\n                    \n                \n\n                \n                    \n                        getcloudName()\n                    \n                \n                            \n                                \n                                    Defined in src/common/cloudinary.config.ts:5\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        apiKey\n                    \n                \n\n                \n                    \n                        getapiKey()\n                    \n                \n                            \n                                \n                                    Defined in src/common/cloudinary.config.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        apiSecret\n                    \n                \n\n                \n                    \n                        getapiSecret()\n                    \n                \n                            \n                                \n                                    Defined in src/common/cloudinary.config.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CloudinaryConfigService {\n  get cloudName(): string {\n    return process.env.CLOUDINARY_CLOUD_NAME;\n  }\n\n  get apiKey(): string {\n    return process.env.CLOUDINARY_API_KEY;\n  }\n\n  get apiSecret(): string {\n    return process.env.CLOUDINARY_API_SECRET;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CloudinaryService.html":{"url":"injectables/CloudinaryService.html","title":"injectable - CloudinaryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CloudinaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/cloudinary.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: CloudinaryConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/cloudinary.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        CloudinaryConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadImage(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/cloudinary.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as cloudinary from 'cloudinary';\nimport { CloudinaryConfigService } from 'src/common/cloudinary.config';\n\n@Injectable()\nexport class CloudinaryService {\n  constructor(private readonly configService: CloudinaryConfigService) {\n    cloudinary.v2.config({\n      cloud_name: this.configService.cloudName,\n      api_key: this.configService.apiKey,\n      api_secret: this.configService.apiSecret,\n    });\n  }\n\n  async uploadImage(file: Express.Multer.File): Promise {\n    const result = await cloudinary.v2.uploader.upload(file.path, {\n      folder: 'coin',\n    });\n    return result.secure_url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coin.html":{"url":"classes/Coin.html","title":"class - Coin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coin/entities/coin.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brandColor\n                            \n                            \n                                coinSymbol\n                            \n                            \n                                exchangeRate\n                            \n                            \n                                iconUrl\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brandColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/coin/entities/coin.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        coinSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/coin/entities/coin.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exchangeRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/coin/entities/coin.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/coin/entities/coin.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/coin/entities/coin.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/coin/entities/coin.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Coin {\n  id: string;\n  name: string;\n  coinSymbol: string;\n  iconUrl: string;\n  brandColor: string;\n  exchangeRate: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoinController.html":{"url":"controllers/CoinController.html","title":"controller - CoinController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoinController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coin/coin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                coin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCoinDto: CreateCoinDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ImageValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/coin/coin.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCoinDto\n                                            \n                                                            CreateCoinDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginatedRequest: PaginatedRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/coin/coin.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginatedRequest\n                                            \n                                                            PaginatedRequestDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/coin/coin.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/coin/coin.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCoinDto: UpdateCoinDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/coin/coin.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCoinDto\n                                            \n                                                            UpdateCoinDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UsePipes,\n} from '@nestjs/common';\nimport { Coin } from 'src/coin/entities/coin.entity';\nimport { ImageValidationPipe } from 'src/coin/pipes/image-validation.pipe';\nimport { PaginatedRequestDTO } from 'src/common/dto/pagination-request.dto';\nimport { PaginatedResponseDTO } from 'src/common/dto/pagination-response.dto';\nimport { CoinService } from './coin.service';\nimport { CreateCoinDto } from './dto/create-coin.dto';\nimport { UpdateCoinDto } from './dto/update-coin.dto';\n\n@Controller('coin')\nexport class CoinController {\n  constructor(private readonly coinService: CoinService) {}\n\n  @Post()\n  @UsePipes(new ImageValidationPipe())\n  async create(@Body() createCoinDto: CreateCoinDto): Promise {\n    return await this.coinService.create(createCoinDto);\n  }\n\n  @Get()\n  async findAll(\n    @Query() paginatedRequest: PaginatedRequestDTO,\n  ): Promise> {\n    return this.coinService.findAllWithPagination(paginatedRequest);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string): Promise {\n    return this.coinService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCoinDto: UpdateCoinDto,\n  ): Promise {\n    return this.coinService.update(id, updateCoinDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string): Promise {\n    return this.coinService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoinModule.html":{"url":"modules/CoinModule.html","title":"module - CoinModule","body":"\n                   \n\n\n\n\n    Modules\n    CoinModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoinModule\n\n\n\ncluster_CoinModule_imports\n\n\n\ncluster_CoinModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nCoinModule\n\nCoinModule\n\nCoinModule -->\n\nCommonModule->CoinModule\n\n\n\n\n\nCoinService\n\nCoinService\n\nCoinModule -->\n\nCoinService->CoinModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/coin/coin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoinService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoinController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonModule } from 'src/common/common.module';\nimport { CoinController } from './coin.controller';\nimport { CoinService } from './coin.service';\n\n@Module({\n  imports: [CommonModule],\n  controllers: [CoinController],\n  providers: [CoinService],\n})\nexport class CoinModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoinService.html":{"url":"injectables/CoinService.html","title":"injectable - CoinService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoinService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coin/coin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paginationService: PaginationService, prisma: PrismaService, cloudinaryService: CloudinaryService)\n                    \n                \n                        \n                            \n                                Defined in src/coin/coin.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paginationService\n                                                  \n                                                        \n                                                                        PaginationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cloudinaryService\n                                                  \n                                                        \n                                                                        CloudinaryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCoinDto: CreateCoinDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coin/coin.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCoinDto\n                                            \n                                                            CreateCoinDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(paginatedRequest: PaginatedRequestDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coin/coin.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginatedRequest\n                                            \n                                                            PaginatedRequestDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coin/coin.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coin/coin.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCoinDto: UpdateCoinDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coin/coin.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCoinDto\n                                            \n                                                            UpdateCoinDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Coin } from 'src/coin/entities/coin.entity';\nimport { CloudinaryService } from 'src/common/cloudinary.service';\nimport { PaginatedRequestDTO } from 'src/common/dto/pagination-request.dto';\nimport { PaginatedResponseDTO } from 'src/common/dto/pagination-response.dto';\nimport { PaginationService } from 'src/common/pagination.service';\nimport { PrismaService } from 'src/common/prisma.service';\nimport { CreateCoinDto } from './dto/create-coin.dto';\nimport { UpdateCoinDto } from './dto/update-coin.dto';\n\n@Injectable()\nexport class CoinService {\n  constructor(\n    private readonly paginationService: PaginationService,\n    private prisma: PrismaService,\n    private cloudinaryService: CloudinaryService,\n  ) {}\n\n  async create(createCoinDto: CreateCoinDto): Promise {\n    const { name, coinSymbol, icon, exchangeRate, brandColor } = createCoinDto;\n\n    // Upload image to Cloudinary and get the URL\n    const iconUrl = await this.cloudinaryService.uploadImage(icon);\n\n    // Save the record in Prisma\n    const createdCoin = await this.prisma.coin.create({\n      data: {\n        name,\n        coinSymbol,\n        iconUrl,\n        exchangeRate,\n        brandColor,\n        wallets: {\n          create: [],\n        },\n        transactions: {\n          create: [],\n        },\n      },\n    });\n\n    return createdCoin;\n  }\n\n  async findAllWithPagination(\n    paginatedRequest: PaginatedRequestDTO,\n  ): Promise> {\n    return this.paginationService.findAllWithPagination(\n      'Coin',\n      paginatedRequest,\n    );\n  }\n\n  findOne(id: string): Promise {\n    return this.prisma.coin.findUnique({\n      where: { id },\n    });\n  }\n\n  update(id: string, updateCoinDto: UpdateCoinDto): Promise {\n    const { name, coinSymbol, exchangeRate, brandColor } = updateCoinDto;\n\n    return this.prisma.coin.update({\n      where: { id },\n      data: {\n        name,\n        coinSymbol,\n        exchangeRate,\n        brandColor,\n      },\n    });\n  }\n\n  remove(id: string): Promise {\n    return this.prisma.coin.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nCloudinaryService \n\nCloudinaryService \n\n\n\nPaginationService \n\nPaginationService \n\n\n\nPrismaService \n\nPrismaService \n\n\n\nCommonModule\n\nCommonModule\n\nCloudinaryService  -->\n\nCommonModule->CloudinaryService \n\n\n\nPaginationService  -->\n\nCommonModule->PaginationService \n\n\n\nPrismaService  -->\n\nCommonModule->PrismaService \n\n\n\n\n\nCloudinaryConfigService\n\nCloudinaryConfigService\n\nCommonModule -->\n\nCloudinaryConfigService->CommonModule\n\n\n\n\n\nCloudinaryService\n\nCloudinaryService\n\nCommonModule -->\n\nCloudinaryService->CommonModule\n\n\n\n\n\nPaginationService\n\nPaginationService\n\nCommonModule -->\n\nPaginationService->CommonModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCommonModule -->\n\nPrismaService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CloudinaryConfigService\n                        \n                        \n                            CloudinaryService\n                        \n                        \n                            PaginationService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CloudinaryService\n                        \n                        \n                            PaginationService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CloudinaryConfigService } from 'src/common/cloudinary.config';\nimport { CloudinaryService } from 'src/common/cloudinary.service';\nimport { PaginationService } from 'src/common/pagination.service';\nimport { PrismaService } from 'src/common/prisma.service';\n\n@Module({\n  providers: [\n    PaginationService,\n    CloudinaryService,\n    PrismaService,\n    CloudinaryConfigService,\n  ],\n  exports: [PaginationService, CloudinaryService, PrismaService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCoinDto.html":{"url":"classes/CreateCoinDto.html","title":"class - CreateCoinDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCoinDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coin/dto/create-coin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                brandColor\n                            \n                            \n                                    \n                                    \n                                coinSymbol\n                            \n                            \n                                    \n                                exchangeRate\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        brandColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsHexColor({message: 'Brand color must be a valid hex color'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coin/dto/create-coin.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        coinSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Symbol must be a string'})@Length(3, 6, {message: 'Symbol must be between 3 and 6 characters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coin/dto/create-coin.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        exchangeRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositive({message: 'Exchange rate must be a positive number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coin/dto/create-coin.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Express.Multer.File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Icon must be a file'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coin/dto/create-coin.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Name must be a string'})@Length(3, 30, {message: 'Name must be between 3 and 30 characters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coin/dto/create-coin.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsHexColor,\n  IsNotEmpty,\n  IsPositive,\n  IsString,\n  Length,\n} from 'class-validator';\n\nexport class CreateCoinDto {\n  @IsString({ message: 'Name must be a string' })\n  @Length(3, 30, { message: 'Name must be between 3 and 30 characters' })\n  name: string;\n\n  @IsString({ message: 'Symbol must be a string' })\n  @Length(3, 6, { message: 'Symbol must be between 3 and 6 characters' })\n  coinSymbol: string;\n\n  @IsNotEmpty({ message: 'Icon must be a file' })\n  icon: Express.Multer.File;\n\n  @IsPositive({ message: 'Exchange rate must be a positive number' })\n  exchangeRate: number;\n\n  @IsHexColor({ message: 'Brand color must be a valid hex color' })\n  brandColor: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransactionDto.html":{"url":"classes/CreateTransactionDto.html","title":"class - CreateTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/dto/create-transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                coinSymbol\n                            \n                            \n                                    \n                                transactionType\n                            \n                            \n                                    \n                                userId\n                            \n                            \n                                    \n                                walletId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositive({message: 'Amount must be a positive number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coinSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Coin type must be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transactionType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(['buy', 'sell'], {message: 'Transaction type must be either buy or sell'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: 'User ID must be a valid Mongo ID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        walletId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: 'Wallet ID must be a valid Mongo ID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/transaction/dto/create-transaction.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsPositive, IsString } from 'class-validator';\n\nexport class CreateTransactionDto {\n  @IsPositive({ message: 'Amount must be a positive number' })\n  amount: number;\n\n  @IsEnum(['buy', 'sell'], {\n    message: 'Transaction type must be either buy or sell',\n  })\n  transactionType: string;\n\n  @IsString({ message: 'Coin type must be a string' })\n  coinSymbol: string;\n\n  @IsMongoId({ message: 'User ID must be a valid Mongo ID' })\n  userId: string;\n\n  @IsMongoId({ message: 'Wallet ID must be a valid Mongo ID' })\n  walletId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                balance\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositive({message: 'Balance must be a positive number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Name must be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsPositive, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString({ message: 'Name must be a string' })\n  name: string;\n\n  @IsPositive({ message: 'Balance must be a positive number' })\n  balance: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWalletDto.html":{"url":"classes/CreateWalletDto.html","title":"class - CreateWalletDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWalletDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/dto/create-wallet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                balance\n                            \n                            \n                                    \n                                coinId\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositive({message: 'Balance must be a positive number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/dto/create-wallet.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coinId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: 'Coin ID must be a valid Mongo ID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/dto/create-wallet.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId({message: 'User ID must be a valid Mongo ID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/wallet/dto/create-wallet.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsPositive } from 'class-validator';\n\nexport class CreateWalletDto {\n  @IsPositive({ message: 'Balance must be a positive number' })\n  balance: number;\n\n  @IsMongoId({ message: 'Coin ID must be a valid Mongo ID' })\n  coinId: string;\n\n  @IsMongoId({ message: 'User ID must be a valid Mongo ID' })\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageValidationPipe.html":{"url":"injectables/ImageValidationPipe.html","title":"injectable - ImageValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImageValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coin/pipes/image-validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: CreateCoinDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coin/pipes/image-validation.pipe.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            CreateCoinDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { CreateCoinDto } from '../dto/create-coin.dto';\n\n@Injectable()\nexport class ImageValidationPipe implements PipeTransform {\n  async transform(value: CreateCoinDto) {\n    const file = value.icon;\n\n    if (!file) {\n      throw new BadRequestException('Icon is required');\n    }\n\n    // Check if the file is an image\n    if (!file.mimetype.startsWith('image')) {\n      throw new BadRequestException(\n        'Invalid file format. Only images are allowed.',\n      );\n    }\n\n    // Check if the file size is less than 1MB\n    const maxSizeInBytes = 1 * 1024 * 1024; // 1MB\n    if (file.size > maxSizeInBytes) {\n      throw new BadRequestException(\n        'File size exceeds the maximum allowed size (1MB).',\n      );\n    }\n\n    // If everything is fine, return the file\n    return file;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedRequestDTO.html":{"url":"classes/PaginatedRequestDTO.html","title":"class - PaginatedRequestDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedRequestDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pagination-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                filterField\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                filterQuery\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pageSize\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sortBy\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sortOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        filterField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Filter field must be a string'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-request.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        filterOperator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Filter operator must be a string'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-request.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        filterQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Filter query must be a string'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-request.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt({message: 'Page must be an integer'})@Min(1, {message: 'Page must be greater than or equal to 1'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-request.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt({message: 'Page size must be an integer'})@Min(1, {message: 'Page size must be greater than or equal to 1'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-request.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Sort by must be a string'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-request.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ASC\" | \"DESC\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Sort order must be a string'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-request.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional, IsString, Min } from 'class-validator';\n\nexport class PaginatedRequestDTO {\n  @IsInt({ message: 'Page must be an integer' })\n  @Min(1, { message: 'Page must be greater than or equal to 1' })\n  @IsOptional()\n  page?: number;\n\n  @IsInt({ message: 'Page size must be an integer' })\n  @Min(1, { message: 'Page size must be greater than or equal to 1' })\n  @IsOptional()\n  pageSize?: number;\n\n  @IsString({ message: 'Filter query must be a string' })\n  @IsOptional()\n  filterQuery?: string;\n\n  @IsString({ message: 'Filter field must be a string' })\n  @IsOptional()\n  filterField?: string;\n\n  @IsString({ message: 'Filter operator must be a string' })\n  @IsOptional()\n  filterOperator?: string;\n\n  @IsString({ message: 'Sort order must be a string' })\n  @IsOptional()\n  sortOrder?: 'ASC' | 'DESC';\n\n  @IsString({ message: 'Sort by must be a string' })\n  @IsOptional()\n  sortBy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDTO.html":{"url":"classes/PaginatedResponseDTO.html","title":"class - PaginatedResponseDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/pagination-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                isLastPage\n                            \n                            \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                pageSize\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isLastPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/pagination-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsInt, Min } from 'class-validator';\n\nexport class PaginatedResponseDTO {\n  @IsArray()\n  data: T[];\n\n  @IsInt()\n  @Min(1)\n  pageSize: number;\n\n  @IsInt()\n  @Min(1)\n  page: number;\n\n  @IsBoolean()\n  isLastPage: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginationService.html":{"url":"injectables/PaginationService.html","title":"injectable - PaginationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaginationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/common/pagination.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(model: string, paginatedRequest: PaginatedRequestDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pagination.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paginatedRequest\n                                            \n                                                            PaginatedRequestDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/common/prisma.service';\nimport { PaginatedRequestDTO } from './dto/pagination-request.dto';\nimport { PaginatedResponseDTO } from './dto/pagination-response.dto';\n\n@Injectable()\nexport class PaginationService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async findAllWithPagination(\n    model: string,\n    paginatedRequest: PaginatedRequestDTO,\n  ): Promise> {\n    let skip = 0;\n    let take = 10;\n    const where = {};\n    const orderBy = {};\n\n    if (paginatedRequest.page && paginatedRequest.pageSize) {\n      skip = (+paginatedRequest.page - 1) * +paginatedRequest.pageSize;\n    }\n\n    if (paginatedRequest.pageSize) {\n      take = +paginatedRequest.pageSize;\n    }\n\n    if (\n      paginatedRequest.filterQuery &&\n      paginatedRequest.filterField &&\n      paginatedRequest.filterOperator\n    ) {\n      where[paginatedRequest.filterField] = {\n        [paginatedRequest.filterOperator]: paginatedRequest.filterQuery,\n      };\n    }\n\n    if (paginatedRequest.sortBy && paginatedRequest.sortOrder) {\n      orderBy[paginatedRequest.sortBy] = paginatedRequest.sortOrder;\n    }\n\n    const data = await this.prisma[model].findMany({\n      where,\n      skip,\n      take,\n      orderBy,\n    });\n\n    const totalCount = await this.prisma[model].count({ where });\n\n    const paginatedResponse = new PaginatedResponseDTO();\n    paginatedResponse.data = data;\n    paginatedResponse.pageSize = take;\n    paginatedResponse.page = paginatedRequest.page || 1;\n    paginatedResponse.isLastPage = skip + take >= totalCount;\n\n    return paginatedResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/entities/transaction.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                coinSymbol\n                            \n                            \n                                id\n                            \n                            \n                                timestamp\n                            \n                            \n                                transactionType\n                            \n                            \n                                transactionValue\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                            \n                                wallet\n                            \n                            \n                                walletId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/transaction/entities/transaction.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        coinSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/transaction/entities/transaction.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/transaction/entities/transaction.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/transaction/entities/transaction.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactionType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/transaction/entities/transaction.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactionValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/transaction/entities/transaction.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/transaction/entities/transaction.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/transaction/entities/transaction.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet\n\n                    \n                \n                    \n                        \n                                Defined in src/transaction/entities/transaction.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        walletId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/transaction/entities/transaction.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from 'src/user/entities/user.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\n\nexport class Transaction {\n  id: string;\n  amount: number;\n  transactionType: string;\n  transactionValue: number;\n  coinSymbol: string;\n  timestamp: Date;\n  userId: string;\n  user: User;\n  walletId: string;\n  wallet: Wallet;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionController.html":{"url":"controllers/TransactionController.html","title":"controller - TransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transaction\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTransactionDto: CreateTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/transaction/transaction.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTransactionDto\n                                            \n                                                            CreateTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginatedRequest: PaginatedRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/transaction/transaction.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginatedRequest\n                                            \n                                                            PaginatedRequestDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/transaction/transaction.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Query } from '@nestjs/common';\nimport { PaginatedRequestDTO } from 'src/common/dto/pagination-request.dto';\nimport { PaginatedResponseDTO } from 'src/common/dto/pagination-response.dto';\nimport { Transaction } from 'src/transaction/entities/transaction.entity';\nimport { CreateTransactionDto } from './dto/create-transaction.dto';\nimport { TransactionService } from './transaction.service';\n\n@Controller('transaction')\nexport class TransactionController {\n  constructor(private readonly transactionService: TransactionService) {}\n\n  @Post()\n  create(@Body() createTransactionDto: CreateTransactionDto): Promise {\n    return this.transactionService.create(createTransactionDto);\n  }\n\n  @Get()\n  async findAll(\n    @Query() paginatedRequest: PaginatedRequestDTO,\n  ): Promise> {\n    return this.transactionService.findAllWithPagination(paginatedRequest);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.transactionService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionModule.html":{"url":"modules/TransactionModule.html","title":"module - TransactionModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_imports\n\n\n\ncluster_TransactionModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nCommonModule->TransactionModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/transaction/transaction.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TransactionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonModule } from 'src/common/common.module';\nimport { TransactionController } from './transaction.controller';\nimport { TransactionService } from './transaction.service';\n\n@Module({\n  imports: [CommonModule],\n  controllers: [TransactionController],\n  providers: [TransactionService],\n})\nexport class TransactionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/transaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                handleTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paginationService: PaginationService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/transaction/transaction.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paginationService\n                                                  \n                                                        \n                                                                        PaginationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTransactionDto: CreateTransactionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transaction/transaction.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTransactionDto\n                                            \n                                                            CreateTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(paginatedRequest: PaginatedRequestDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transaction/transaction.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginatedRequest\n                                            \n                                                            PaginatedRequestDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transaction/transaction.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTransaction(user: User, wallet: Wallet, coin: Coin, amount: number, transactionType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transaction/transaction.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                wallet\n                                            \n                                                            Wallet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                coin\n                                            \n                                                            Coin\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                transactionType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { Coin } from 'src/coin/entities/coin.entity';\nimport { PaginatedRequestDTO } from 'src/common/dto/pagination-request.dto';\nimport { PaginatedResponseDTO } from 'src/common/dto/pagination-response.dto';\nimport { PaginationService } from 'src/common/pagination.service';\nimport { PrismaService } from 'src/common/prisma.service';\nimport { Transaction } from 'src/transaction/entities/transaction.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { CreateTransactionDto } from './dto/create-transaction.dto';\n\n@Injectable()\nexport class TransactionService {\n  constructor(\n    private readonly paginationService: PaginationService,\n    private prisma: PrismaService,\n  ) {}\n\n  async handleTransaction(\n    user: User,\n    wallet: Wallet,\n    coin: Coin,\n    amount: number,\n    transactionType: string,\n  ) {\n    const transactionValue = coin.exchangeRate * amount;\n\n    if (transactionType === 'buy') {\n      if (user.balance > {\n    return this.paginationService.findAllWithPagination(\n      'Coin',\n      paginatedRequest,\n    );\n  }\n\n  findOne(id: string) {\n    return this.prisma.transaction.findUnique({\n      where: { id },\n      include: {\n        user: true,\n        wallet: true,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCoinDto.html":{"url":"classes/UpdateCoinDto.html","title":"class - UpdateCoinDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCoinDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coin/dto/update-coin.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCoinDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCoinDto } from './create-coin.dto';\n\nexport class UpdateCoinDto extends PartialType(CreateCoinDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTransactionDto.html":{"url":"classes/UpdateTransactionDto.html","title":"class - UpdateTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transaction/dto/update-transaction.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateTransactionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTransactionDto } from './create-transaction.dto';\n\nexport class UpdateTransactionDto extends PartialType(CreateTransactionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWalletDto.html":{"url":"classes/UpdateWalletDto.html","title":"class - UpdateWalletDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWalletDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/dto/update-wallet.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateWalletDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateWalletDto } from './create-wallet.dto';\n\nexport class UpdateWalletDto extends PartialType(CreateWalletDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                transactions\n                            \n                            \n                                wallets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Wallet[]\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transaction } from 'src/transaction/entities/transaction.entity';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\n\nexport class User {\n  id: string;\n  name: string;\n  balance: number;\n  wallets: Wallet[];\n  transactions: Transaction[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginatedRequest: PaginatedRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginatedRequest\n                                            \n                                                            PaginatedRequestDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { PaginatedRequestDTO } from 'src/common/dto/pagination-request.dto';\nimport { PaginatedResponseDTO } from 'src/common/dto/pagination-response.dto';\nimport { User } from 'src/user/entities/user.entity';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UserService } from './user.service';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  findAll(\n    @Query() paginatedRequest: PaginatedRequestDTO,\n  ): Promise> {\n    return this.userService.findAll(paginatedRequest);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.userService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonModule } from 'src/common/common.module';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [CommonModule],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paginationService: PaginationService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paginationService\n                                                  \n                                                        \n                                                                        PaginationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginatedRequest: PaginatedRequestDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginatedRequest\n                                            \n                                                            PaginatedRequestDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PaginatedRequestDTO } from 'src/common/dto/pagination-request.dto';\nimport { PaginatedResponseDTO } from 'src/common/dto/pagination-response.dto';\nimport { PaginationService } from 'src/common/pagination.service';\nimport { PrismaService } from 'src/common/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly paginationService: PaginationService,\n    private prisma: PrismaService,\n  ) {}\n  create(createUserDto: CreateUserDto) {\n    const { name, balance } = createUserDto;\n    return this.prisma.user.create({\n      data: {\n        name,\n        balance,\n      },\n    });\n  }\n\n  async findAll(\n    paginatedRequest: PaginatedRequestDTO,\n  ): Promise> {\n    return this.paginationService.findAllWithPagination(\n      'User',\n      paginatedRequest,\n    );\n  }\n\n  findOne(id: string) {\n    const user = this.prisma.user.findUnique({\n      where: { id },\n    });\n    return user;\n  }\n\n  update(id: string, updateUserDto: UpdateUserDto) {\n    const { name, balance } = updateUserDto;\n    return this.prisma.user.update({\n      where: { id },\n      data: {\n        name,\n        balance,\n      },\n    });\n  }\n\n  remove(id: string) {\n    return this.prisma.user.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Wallet.html":{"url":"classes/Wallet.html","title":"class - Wallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Wallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/entities/wallet.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                coin\n                            \n                            \n                                coinId\n                            \n                            \n                                id\n                            \n                            \n                                transactions\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        coin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Coin\n\n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        coinId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/wallet/entities/wallet.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Coin } from 'src/coin/entities/coin.entity';\nimport { Transaction } from 'src/transaction/entities/transaction.entity';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class Wallet {\n  id: string;\n  balance: number;\n  userId: string;\n  user: User;\n  coinId: string;\n  coin: Coin;\n  transactions: Transaction[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WalletController.html":{"url":"controllers/WalletController.html","title":"controller - WalletController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WalletController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/wallet.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                wallet\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createWalletDto: CreateWalletDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/wallet/wallet.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWalletDto\n                                            \n                                                            CreateWalletDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(paginatedRequest: PaginatedRequestDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/wallet/wallet.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginatedRequest\n                                            \n                                                            PaginatedRequestDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/wallet/wallet.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/wallet/wallet.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateWalletDto: UpdateWalletDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/wallet/wallet.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateWalletDto\n                                            \n                                                            UpdateWalletDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n} from '@nestjs/common';\nimport { PaginatedRequestDTO } from 'src/common/dto/pagination-request.dto';\nimport { PaginatedResponseDTO } from 'src/common/dto/pagination-response.dto';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { CreateWalletDto } from './dto/create-wallet.dto';\nimport { UpdateWalletDto } from './dto/update-wallet.dto';\nimport { WalletService } from './wallet.service';\n\n@Controller('wallet')\nexport class WalletController {\n  constructor(private readonly walletService: WalletService) {}\n\n  @Post()\n  create(@Body() createWalletDto: CreateWalletDto) {\n    return this.walletService.create(createWalletDto);\n  }\n\n  @Get()\n  findAll(\n    @Query() paginatedRequest: PaginatedRequestDTO,\n  ): Promise> {\n    return this.walletService.findAllWithPagination(paginatedRequest);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.walletService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateWalletDto: UpdateWalletDto) {\n    return this.walletService.update(id, updateWalletDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.walletService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletModule.html":{"url":"modules/WalletModule.html","title":"module - WalletModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_providers\n\n\n\ncluster_WalletModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nCommonModule->WalletModule\n\n\n\n\n\nWalletService\n\nWalletService\n\nWalletModule -->\n\nWalletService->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/wallet/wallet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WalletService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WalletController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonModule } from 'src/common/common.module';\nimport { WalletController } from './wallet.controller';\nimport { WalletService } from './wallet.service';\n\n@Module({\n  imports: [CommonModule],\n  controllers: [WalletController],\n  providers: [WalletService],\n})\nexport class WalletModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paginationService: PaginationService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/wallet/wallet.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paginationService\n                                                  \n                                                        \n                                                                        PaginationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createWalletDto: CreateWalletDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/wallet/wallet.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWalletDto\n                                            \n                                                            CreateWalletDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(paginatedRequest: PaginatedRequestDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/wallet/wallet.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginatedRequest\n                                            \n                                                            PaginatedRequestDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/wallet/wallet.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/wallet/wallet.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateWalletDto: UpdateWalletDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/wallet/wallet.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateWalletDto\n                                            \n                                                            UpdateWalletDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PaginatedRequestDTO } from 'src/common/dto/pagination-request.dto';\nimport { PaginatedResponseDTO } from 'src/common/dto/pagination-response.dto';\nimport { PaginationService } from 'src/common/pagination.service';\nimport { PrismaService } from 'src/common/prisma.service';\nimport { Wallet } from 'src/wallet/entities/wallet.entity';\nimport { CreateWalletDto } from './dto/create-wallet.dto';\nimport { UpdateWalletDto } from './dto/update-wallet.dto';\n\n@Injectable()\nexport class WalletService {\n  constructor(\n    private readonly paginationService: PaginationService,\n    private prisma: PrismaService,\n  ) {}\n  create(createWalletDto: CreateWalletDto) {\n    const { coinId, userId, balance } = createWalletDto;\n\n    const coin = this.prisma.coin.findUnique({ where: { id: coinId } });\n    if (!coin) {\n      throw new HttpException('Coin not found', HttpStatus.NOT_FOUND);\n    }\n\n    const user = this.prisma.user.findUnique({ where: { id: userId } });\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    return this.prisma.wallet.create({\n      data: {\n        coin: {\n          connect: {\n            id: coinId,\n          },\n        },\n        user: {\n          connect: {\n            id: userId,\n          },\n        },\n        balance,\n      },\n    });\n  }\n\n  async findAllWithPagination(\n    paginatedRequest: PaginatedRequestDTO,\n  ): Promise> {\n    return this.paginationService.findAllWithPagination(\n      'Wallet',\n      paginatedRequest,\n    );\n  }\n\n  findOne(id: string) {\n    return this.prisma.wallet.findUnique({ where: { id } });\n  }\n\n  update(id: string, updateWalletDto: UpdateWalletDto) {\n    const { balance } = updateWalletDto;\n    return this.prisma.wallet.update({\n      where: { id },\n      data: {\n        balance,\n      },\n    });\n  }\n\n  remove(id: string) {\n    return this.prisma.wallet.delete({\n      where: { id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/coin/coin.controller.ts\n            \n            controller\n            CoinController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/coin/coin.service.ts\n            \n            injectable\n            CoinService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/coin/dto/create-coin.dto.ts\n            \n            class\n            CreateCoinDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/coin/dto/update-coin.dto.ts\n            \n            class\n            UpdateCoinDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/coin/entities/coin.entity.ts\n            \n            class\n            Coin\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/coin/pipes/image-validation.pipe.ts\n            \n            injectable\n            ImageValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/cloudinary.config.ts\n            \n            injectable\n            CloudinaryConfigService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/cloudinary.service.ts\n            \n            injectable\n            CloudinaryService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/dto/pagination-request.dto.ts\n            \n            class\n            PaginatedRequestDTO\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dto/pagination-response.dto.ts\n            \n            class\n            PaginatedResponseDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/pagination.service.ts\n            \n            injectable\n            PaginationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/transaction/dto/create-transaction.dto.ts\n            \n            class\n            CreateTransactionDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/transaction/dto/update-transaction.dto.ts\n            \n            class\n            UpdateTransactionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/transaction/entities/transaction.entity.ts\n            \n            class\n            Transaction\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/transaction/transaction.controller.ts\n            \n            controller\n            TransactionController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/transaction/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/wallet/dto/create-wallet.dto.ts\n            \n            class\n            CreateWalletDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/wallet/dto/update-wallet.dto.ts\n            \n            class\n            UpdateWalletDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/wallet/entities/wallet.entity.ts\n            \n            class\n            Wallet\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/wallet/wallet.controller.ts\n            \n            controller\n            WalletController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/wallet/wallet.service.ts\n            \n            injectable\n            WalletService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.17\n        \n            @nestjs/throttler : ^5.1.1\n        \n            @prisma/client : 5.7.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cloudinary : ^1.41.1\n        \n            helmet : ^7.1.0\n        \n            prisma : ^5.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nBackend for Bitmosys-q423.\nDB Schema\n\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoinModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CoinModule\n\n\n\ncluster_CoinModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_TransactionModule\n\n\n\ncluster_TransactionModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_providers\n\n\n\n\nCoinModule\n\nCoinModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoinModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nCoinModule -->\n\nCommonModule->CoinModule\n\n\n\n\n\nTransactionModule\n\nTransactionModule\n\nTransactionModule -->\n\nCommonModule->TransactionModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nCommonModule->WalletModule\n\n\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nCloudinaryService \n\nCloudinaryService \n\nCloudinaryService  -->\n\nCommonModule->CloudinaryService \n\n\n\n\n\nPaginationService \n\nPaginationService \n\nPaginationService  -->\n\nCommonModule->PaginationService \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nCommonModule->PrismaService \n\n\n\nAppModule -->\n\nTransactionModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\nAppModule -->\n\nWalletModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCoinService\n\nCoinService\n\nCoinModule -->\n\nCoinService->CoinModule\n\n\n\n\n\nCloudinaryConfigService\n\nCloudinaryConfigService\n\nCommonModule -->\n\nCloudinaryConfigService->CommonModule\n\n\n\n\n\nCloudinaryService\n\nCloudinaryService\n\nCommonModule -->\n\nCloudinaryService->CommonModule\n\n\n\n\n\nPaginationService\n\nPaginationService\n\nCommonModule -->\n\nPaginationService->CommonModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCommonModule -->\n\nPrismaService->CommonModule\n\n\n\n\n\nTransactionService\n\nTransactionService\n\nTransactionModule -->\n\nTransactionService->TransactionModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nWalletService\n\nWalletService\n\nWalletModule -->\n\nWalletService->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : Bitmosys Q423 API\n        \n            License : UNLICENSED\n        \n            Author : Sagyam Thapa\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
